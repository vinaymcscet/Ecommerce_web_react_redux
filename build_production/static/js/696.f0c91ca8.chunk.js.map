{"version":3,"file":"static/js/696.f0c91ca8.chunk.js","mappings":"qIAGA,MAQA,EAReA,IAAiD,IAAhD,KAACC,EAAI,MAAEC,EAAK,QAAEC,EAAO,MAAEC,EAAK,YAAEC,GAAYL,EACxD,OACEM,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,UAAQL,KAAMA,EAAMO,UAAW,GAAGL,KAAWC,IAASK,QAASJ,EAAYE,SAAEL,KAC3E,C,sHCCV,MA+LA,EA/LsBQ,KAClB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,IACtCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,CACrCK,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,eAAgB,MAEbC,EAAQC,IAAaV,EAAAA,EAAAA,UAAS,CAAC,IAChC,KAAEW,IAASC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMF,OACxCG,GAAWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OAUjBC,EAAAA,EAAAA,YAAU,KACNH,GAASI,EAAAA,EAAAA,MAAiB,GAC3B,IAEH,MAAMC,EAAgBC,IAClB,MAAM,KAAEC,EAAI,MAAEhC,GAAU+B,EAAEE,OAC1B,IAAIC,EAAelC,EACN,UAATgC,GAAoB,QAAQG,KAAKnC,KAAWA,EAAMoC,WAAW,SAC7DF,EAAe,MAAMlC,KAEzBe,EAAY,IACTD,EACH,CAACkB,GAAOE,GACN,EA2DN,OACIG,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,gBAAeD,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaD,UACxBgC,EAAAA,EAAAA,MAAA,QAAMC,SA3BIP,IAClBA,EAAEQ,iBACF,MAAMC,EAnCOC,MACb,IAAIC,EAAa,CAAC,EA6BlB,OA1BK5B,EAASE,SAAS2B,SACnBD,EAAW1B,SAAW,yBAIrBF,EAASG,MAEF,eAAekB,KAAKrB,EAASG,SACrCyB,EAAWzB,MAAQ,4BAFnByB,EAAWzB,MAAQ,oBAMlBH,EAASI,MAAMyB,OAER,WAAWR,KAAKrB,EAASI,QAAWJ,EAASI,MAAMkB,WAAW,SACtEM,EAAWxB,MAAQ,mEAFnBwB,EAAWxB,MAAQ,2BAKlBJ,EAASK,iBACVuB,EAAWvB,eAAiB,+BAG3BP,IACD8B,EAAW9B,WAAa,0CAGrB8B,CAAU,EAKQD,GACzB,GAAIG,OAAOC,KAAKL,GAAkBM,OAAS,EACvCzB,EAAUmB,OACP,CACH,MAAMO,EAAc,CAChBf,KAAMlB,EAASE,SACfC,MAAOH,EAASG,MAChB+B,OAAQlC,EAASI,MACjB+B,OAAQnC,EAASK,gBAErBM,GAASyB,EAAAA,EAAAA,IAAiBH,IAC1B1B,EAAU,CAAC,GACXN,EAAY,CACRC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,eAAgB,KAEpBN,GAAc,EAClB,GAMqCR,SAAA,EACzBgC,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,MAAKD,SAAA,EAChBgC,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,eAAcD,SAAA,EACzBD,EAAAA,EAAAA,KAAA,SAAO+C,QAAQ,WAAU9C,SAAC,eAC1BD,EAAAA,EAAAA,KAAA,SACIL,KAAK,OACLiC,KAAK,WACLoB,YAAY,YACZpD,MAAOc,EAASE,SAChBqC,SAAUvB,IAEbV,EAAOJ,WAAYZ,EAAAA,EAAAA,KAAA,KAAGE,UAAU,QAAOD,SAAEe,EAAOJ,eAErDqB,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,eAAcD,SAAA,EACzBD,EAAAA,EAAAA,KAAA,SAAO+C,QAAQ,QAAO9C,SAAC,cACvBD,EAAAA,EAAAA,KAAA,SACIL,KAAK,QACLiC,KAAK,QACLoB,YAAY,QACZpD,MAAOc,EAASG,MAChBoC,SAAUvB,IAEbV,EAAOH,QAASb,EAAAA,EAAAA,KAAA,KAAGE,UAAU,QAAOD,SAAEe,EAAOH,eAItDoB,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,MAAKD,SAAA,EAChBgC,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,eAAcD,SAAA,EACzBD,EAAAA,EAAAA,KAAA,SAAO+C,QAAQ,QAAO9C,SAAC,yBACvBD,EAAAA,EAAAA,KAAA,SACIL,KAAK,OACLiC,KAAK,QACLoB,YAAY,qBACZpD,MAAOc,EAASI,MAChBmC,SAAUvB,IAEbV,EAAOF,QAASd,EAAAA,EAAAA,KAAA,KAAGE,UAAU,QAAOD,SAAEe,EAAOF,YAElDmB,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,eAAcD,SAAA,EACzBD,EAAAA,EAAAA,KAAA,SAAO+C,QAAQ,QAAO9C,SAAC,qBACvBgC,EAAAA,EAAAA,MAAA,UACIL,KAAK,iBACLsB,GAAG,iBACHF,YAAY,yBACZpD,MAAOc,EAASK,eAChBkC,SAAUvB,EAAazB,SAAA,EAEvBD,EAAAA,EAAAA,KAAA,UAAQJ,MAAM,GAAEK,SAAC,2BAChBkD,EAAAA,IAAuBA,EAAAA,GAAoBC,KAAIP,IAC5C7C,EAAAA,EAAAA,KAAAqD,EAAAA,SAAA,CAAApD,UACID,EAAAA,EAAAA,KAAA,UAAQJ,MAAOiD,EAAOjD,MAAMK,SAAE4C,EAAOjD,eAMhDoB,EAAOD,iBAAkBf,EAAAA,EAAAA,KAAA,KAAGE,UAAU,QAAOD,SAAEe,EAAOD,wBAI/Df,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMD,UACjBgC,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,UAASD,SAAA,EACpBD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,kDACHD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,iFAIXD,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKD,UAChBgC,EAAAA,EAAAA,MAAA,OAAK/B,UAAU,iBAAgBD,SAAA,EAC3BgC,EAAAA,EAAAA,MAAA,SAAO/B,UAAU,QAAOD,SAAA,EACpBD,EAAAA,EAAAA,KAAA,SACIL,KAAK,WACLiC,KAAK,aACL0B,QAAS9C,EACTyC,SAAWtB,GAAMlB,EAAckB,EAAEE,OAAOyB,YAE5CtD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,qCAETe,EAAOR,aAAcR,EAAAA,EAAAA,KAAA,KAAGE,UAAU,QAAOD,SAAEe,EAAOR,mBAG3DR,EAAAA,EAAAA,KAACuD,EAAAA,EAAM,CACH5D,KAAM,SACNC,MAAO,SACPC,QAAQ,kBACRC,MAAM,iBAIhB,C","sources":["components/Button/Button.jsx","pages/DeleteAccount/DeleteAccount.jsx"],"sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = ({type, value, varient, space, handleClick}) => {\r\n  return (\r\n    <div>\r\n        <button type={type} className={`${varient} ${space}`} onClick={handleClick}>{value}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Button","import React, { useEffect, useState } from 'react';\r\nimport Button from '../../components/Button/Button';\r\nimport { deleteAccountReason } from '../../utils/Constants';\r\nimport { getDeleteAccount, getUserRequest } from '../../store/slice/api_integration';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './DeleteAccount.css';\r\n\r\nconst DeleteAccount = () => {\r\n    const [isFetched, setIsFetched] = useState(false);\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        fullName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        deletionReason: \"\",\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const { user } = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();    \r\n\r\n    // useEffect(() => {\r\n    //     if (!isFetched && (!user || user.length === 0)) {\r\n    //         dispatch(getUserRequest());\r\n    //         setIsFetched(true);\r\n    //     } else if (!user || Object.keys(user).length === 0) {\r\n    //         navigate('/');\r\n    //     }\r\n    // }, [isFetched, user, dispatch, navigate]);\r\n    useEffect(() => {\r\n        dispatch(getUserRequest());\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        let updatedValue = value;\r\n        if (name === \"phone\" && /^\\d+$/.test(value) && !value.startsWith(\"+44\")) {\r\n            updatedValue = `+44${value}`;\r\n        }\r\n        setFormData({\r\n        ...formData,\r\n        [name]: updatedValue,\r\n        });\r\n    };\r\n\r\n    const validate = () => {\r\n        let formErrors = {};\r\n\r\n        // Full Name validation\r\n        if (!formData.fullName.trim()) {\r\n            formErrors.fullName = \"Full Name is required\";\r\n        }\r\n\r\n        // Email validation\r\n        if (!formData.email) {\r\n            formErrors.email = \"Email is required\";\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n            formErrors.email = \"Email address is invalid\";\r\n        }\r\n\r\n        // Phone validation\r\n        if (!formData.phone.trim()) {\r\n            formErrors.phone = \"Phone number is required\";\r\n        } else if (!/^\\d{10}$/.test(formData.phone) && !formData.phone.startsWith(\"+44\")) {\r\n            formErrors.phone = \"Phone number is invalid, should be 10 digits and start with +44\";\r\n        }\r\n\r\n        if (!formData.deletionReason) {\r\n            formErrors.deletionReason = \"Deletion reason is required\";\r\n        }\r\n\r\n        if (!rememberMe) {\r\n            formErrors.rememberMe = \"You must confirm your account deletion\";\r\n        }\r\n\r\n        return formErrors;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const validationErrors = validate();\r\n        if (Object.keys(validationErrors).length > 0) {\r\n            setErrors(validationErrors);\r\n        } else {\r\n            const responseObj = {\r\n                name: formData.fullName,\r\n                email: formData.email,\r\n                mobile: formData.phone,\r\n                reason: formData.deletionReason\r\n            };\r\n            dispatch(getDeleteAccount(responseObj));\r\n            setErrors({});\r\n            setFormData({\r\n                fullName: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                deletionReason: \"\",\r\n            })\r\n            setRememberMe(false);\r\n        }\r\n    }\r\n    return (\r\n        <div className='deleteAccount'>\r\n            <h6>Delete Account</h6>\r\n            <div className=\"contactForm\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"box\">\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"fullName\">Full Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"fullName\"\r\n                                placeholder=\"Full Name\"\r\n                                value={formData.fullName}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.fullName && <p className=\"error\">{errors.fullName}</p>}\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"email\">Email Id</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.email && <p className=\"error\">{errors.email}</p>}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"box\">\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"phone\">Mobile/Phone Number</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter phone number\"\r\n                                value={formData.phone}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.phone && <p className=\"error\">{errors.phone}</p>}\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"phone\">Deletion Reason</label>\r\n                            <select \r\n                                name=\"deletionReason\" \r\n                                id=\"deletionReason\" \r\n                                placeholder=\"Select Deletion Reason\"\r\n                                value={formData.deletionReason}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <option value=\"\">Select Deletion Reason</option>\r\n                                {deleteAccountReason && deleteAccountReason.map(reason => (\r\n                                    <>\r\n                                        <option value={reason.value}>{reason.value}</option>\r\n                                    </>\r\n                                ))\r\n                                }\r\n                                \r\n                            </select>\r\n                            {errors.deletionReason && <p className=\"error\">{errors.deletionReason}</p>}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"box \">\r\n                        <div className=\"notefrm\">\r\n                            <p>Are you sure you want to delete the account?</p>\r\n                            <p>Once you delete the account, there is no going back. Please be certain</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"box\">\r\n                        <div className=\"authentication\">\r\n                            <label className=\"round\">\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    name=\"rememberMe\" \r\n                                    checked={rememberMe}\r\n                                    onChange={(e) => setRememberMe(e.target.checked)} \r\n                                />\r\n                                <span>I confirm my account deletion</span>\r\n                            </label>\r\n                            {errors.rememberMe && <p className=\"error\">{errors.rememberMe}</p>}\r\n                        </div>\r\n                    </div>\r\n                    <Button\r\n                        type={\"submit\"}\r\n                        value={\"submit\"}\r\n                        varient=\"explore contact\"\r\n                        space=\"sp-10\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteAccount"],"names":["_ref","type","value","varient","space","handleClick","_jsx","children","className","onClick","DeleteAccount","isFetched","setIsFetched","useState","rememberMe","setRememberMe","formData","setFormData","fullName","email","phone","deletionReason","errors","setErrors","user","useSelector","state","dispatch","useDispatch","useNavigate","useEffect","getUserRequest","handleChange","e","name","target","updatedValue","test","startsWith","_jsxs","onSubmit","preventDefault","validationErrors","validate","formErrors","trim","Object","keys","length","responseObj","mobile","reason","getDeleteAccount","htmlFor","placeholder","onChange","id","deleteAccountReason","map","_Fragment","checked","Button"],"sourceRoot":""}