{"version":3,"file":"static/js/832.a2446bae.chunk.js","mappings":"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","sources":["components/CategoryCard/CategoryCard.jsx","components/CategorySlider/CategorySlider.jsx","components/LinearProgressWithLabel/LinearProgressWithLabel.jsx","components/ProductSchemaMarkup/ProductSchemaMarkup.jsx","pages/ProductDetail/ProductDetail.jsx","utils/ShareProduct.js"],"sourcesContent":["import React from 'react';\r\nimport './CategoryCard.css';\r\n\r\nconst CategoryCard = ({ imgSrc, imgName, handleCategory, activeCategory }) => {\r\n  return (\r\n    <div \r\n      className={`categoryItem ${activeCategory ? 'active' : ''} `} \r\n      onClick={handleCategory}\r\n    >\r\n        <img src={imgSrc} alt={imgName} />\r\n        <p>{imgName}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryCard","import React, { useEffect, useState } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { slick_category_settings } from \"../../utils/ProductData\";\r\nimport CategoryCard from \"../CategoryCard/CategoryCard\";\r\nimport './CategorySlider.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductOnSubCategory, getSubCategoryData } from \"../../store/slice/api_integration\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst CategorySlider = ({ subCategoryId }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { subCategoryList } = useSelector((state) => state.product); \r\n\r\n  const handleProductClick = (item) => {\r\n    const responseObj = {\r\n      sub_category_id: item.id, \r\n      offset: 1, \r\n      limit: 10\r\n    }\r\n    dispatch(getProductOnSubCategory(responseObj));\r\n    const searchParams = new URLSearchParams(location.search);\r\n    searchParams.set(\"subcategory_id\", item.id);\r\n    // Remove the page parameter if it exists\r\n    searchParams.delete(\"page\");\r\n    searchParams.delete(\"itemsPerPage\");\r\n    navigate(`?${searchParams.toString()}`);\r\n  };\r\n\r\n  const activeCategoryId = subCategoryId;\r\n\r\n    return (\r\n      <div className=\"catProduct\">\r\n        {subCategoryList ? (<Slider {...slick_category_settings}>\r\n          {subCategoryList?.map((slide, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <CategoryCard\r\n                  imgSrc={slide.category_image || '/images/no-product-available.png'}\r\n                  imgName={slide.name}\r\n                  handleCategory={() => handleProductClick(slide)}\r\n                  activeCategory={parseInt(slide?.id, 10) === parseInt(activeCategoryId, 10)}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </Slider>) : ''}\r\n      </div>\r\n    );\r\n  };  \r\n\r\nexport default CategorySlider","import React from 'react';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst LinearProgressWithLabel = ({ value }) => {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" value={value} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(value)}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LinearProgressWithLabel;","import React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst ProductSchemaMarkup = ({ product }) => {\r\n\r\n  const schemaData = {\r\n    \"@context\": \"https://schema.org/\",\r\n    \"@type\": \"Product\",\r\n    \"name\": product.data.name,\r\n    \"image\": product.data.images[0], \r\n    \"description\": product.data.description.content[0],\r\n    \"sku\": product.data.variants[0].sku_id,\r\n    \"brand\": {\r\n      \"@type\": \"Brand\",\r\n      \"name\": product?.data?.additional_info.filter((info) => info?.title.toLowerCase().includes(\"brand\"))[0]?.value,\r\n    },\r\n    \"offers\": {\r\n      \"@type\": \"Offer\",\r\n      \"url\": window.location.href,\r\n      \"priceCurrency\": \"USD\",\r\n      \"price\": product.data.variants[0].sku_price.current,\r\n      \"availability\": \"https://schema.org/InStock\",\r\n      \"itemCondition\": \"https://schema.org/NewCondition\"\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Helmet>\r\n      <script type=\"application/ld+json\">{JSON.stringify(schemaData)}</script>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default ProductSchemaMarkup;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport CategorySlider from \"../../components/CategorySlider/CategorySlider\";\r\nimport ProductSlider from \"../../components/ProductSlider/ProductSlider\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport StarRating from \"../../components/StarRating/StarRating\";\r\nimport LinearProgressWithLabel from \"../../components/LinearProgressWithLabel/LinearProgressWithLabel\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport ProductListCard from \"../../components/ProductListCard/ProductListCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addProductOnWhistList, addReviewProductData, addReviewProductImageData, addToCartData, deleteSingleWhistListData, getAllRecentViewData, getHomeData, getListAddress, getReviewProductData, productDetailData, similarProductData, viewItemsInCartData } from \"../../store/slice/api_integration\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport \"./ProductDetail.css\";\r\n// import { gaurnteeMessage } from \"../../utils/CommonUtils\";\r\nimport { DEFAULT_OPTIONS } from \"../../utils/Constants\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { ShareProduct } from \"../../utils/ShareProduct\";\r\nimport { setViewCartItems } from \"../../store/slice/cartSlice\";\r\nimport { toggleAddressModal, toggleModal } from \"../../store/slice/modalSlice\";\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ProductSchemaMarkup from \"../../components/ProductSchemaMarkup/ProductSchemaMarkup\";\r\nimport { setDefaultUserAddress } from \"../../store/slice/userSlice\";\r\n\r\nconst ProductDetail = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { \r\n    productDetailResponse, \r\n    getReview, \r\n    getReviewCount = 0,\r\n    similarProductListResponse, \r\n    similarProductCount = 0,\r\n    recentView,\r\n    totalRecentView = 0,\r\n   } = useSelector((state) => state.product);\r\n  const { user, userAddress, defaultUserAddress } = useSelector((state) => state.user);\r\n  \r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [sizeError, setSizeError] = useState(\"\");\r\n  const [showReviewForm, setShowReviewForm] = useState(false);\r\n  const [rating, setRating] = useState(0);\r\n  const [whistListBox, setWhistListBox] = useState({\r\n    whistlist: \"/images/product/whistlist.svg\",\r\n    whistlistFill: \"/images/product/whistlist-fill.svg\",\r\n    share: \"/images/product/share.svg\",\r\n  });\r\n  const [userLoggedOnWishLists, setUserLoggedOnWishList] = useState(\"\");\r\n  const [userLoggedOnCart, setUserLoggedOnCart] = useState(\"\");\r\n  const [userLoggedOnReview, setUserLoggedOnReview] = useState(\"\");\r\n  const [userLoggedOnBuyNow, setUserLoggedOnBuyNow] = useState(\"\");\r\n  const [defaultAddressError, setDefaultAddressError] = useState(\"\");\r\n  const [triggerSkuId, setTriggerSkuId] = useState(null);\r\n\r\n  // const [handleCartOnLoad, setHandleCartOnLoad] = useState(0);\r\n  const [handleCartButtonOnLoad, setHandleCartButtonOnLoad] = useState(0);\r\n  const [imageData, setImageData] = useState([\r\n    { imageId: '', imageUrl: '', preview: '' },\r\n    { imageId: '', imageUrl: '', preview: '' },\r\n    { imageId: '', imageUrl: '', preview: '' },\r\n    { imageId: '', imageUrl: '', preview: '' },\r\n    { imageId: '', imageUrl: '', preview: '' },\r\n  ]);\r\n  const [selected, setSelected] = useState({\r\n    sku_id: null,\r\n    color: null,\r\n    size: null,\r\n    quantity: 0,\r\n    currentPrice: 0,\r\n    originalPrice: 0,\r\n    discount: 0\r\n  });\r\n  const [isSelectedInitialized, setIsSelectedInitialized] = useState(false);\r\n  \r\n  const [errorFileType, setErrorFileType] = useState(\"\");\r\n  const [reviewPage, setReviewPage] = useState(1);  // Default page 0 (first page)\r\n  const [reviewPerPage, setReviewPerPage] = useState(30);\r\n  const [recentViewPage, setRecentViewPage] = useState(1);  // Default page 0 (first page)\r\n  const [recentViewPerPage, setRecentViewPerPage] = useState(5);\r\n  \r\n  const [similarProductPage, setSimilarProductPage] = useState(1);  // Default page 0 (first page)\r\n  const [similarProductPerPage, setSimilarProductPerPage] = useState(5);\r\n\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    review: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    review: \"\",\r\n    rating: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [reviewLoading, setreviewLoading] = useState(false);\r\n  const [similarProductLoading, setSimilarProductLoading] = useState(false);\r\n  const [recentlyViewLoading, setRecentlyViewLoading] = useState(false);\r\n  const [imageLoading, setImageLoading] = useState([]);\r\n  const [wistlistLoading, setWishlistLoading] = useState(false);\r\n\r\n  const location = useLocation();\r\n  const pathSegments = location.pathname.split(\"/\"); // Split URL by `/`\r\n  const product_id = pathSegments[pathSegments.length - 1];\r\n\r\n  useEffect(() => {\r\n      dispatch(getListAddress());\r\n    }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    dispatch(getHomeData())\r\n    if(product_id === undefined) {\r\n      return\r\n    } else {\r\n      const responseObj = { \r\n        product_id: product_id ,\r\n      }\r\n      dispatch(productDetailData(responseObj)).finally(() => {\r\n        setLoading(false); // Set loading to false after fetching data\r\n        setTimeout(() => {\r\n          if (location.state?.scrollToBottom) {\r\n            handleActiveTabs(2);\r\n            window.scrollTo({\r\n              top: 800,\r\n              behavior: \"smooth\", // For smooth scrolling\r\n            });\r\n          }\r\n        }, 1000);\r\n      });\r\n    }\r\n    // const defaultAddressId = user[0]?.data?.default_address_id;\r\n    if(!userAddress) {\r\n      setDefaultAddressError(\"Please add default address before to add items on Cart.\")\r\n    }\r\n  }, [])\r\n\r\n  const categoryParams = new URLSearchParams(location.search);\r\n  const subcategory_id = categoryParams.get('subcategory_id');  \r\n\r\n  const tabRefs = [useRef(null), useRef(null), useRef(null)];\r\n\r\n  const images = productDetailResponse?.data?.images?.length\r\n  ? productDetailResponse?.data?.images.map((item) => ({\r\n    original: item || '/images/no-product-available.png',\r\n    thumbnail: item || '/images/no-product-available.png',\r\n    originalAlt: productDetailResponse?.data?.name,\r\n    thumbnailAlt: productDetailResponse?.data?.name,\r\n  }))\r\n  : [\r\n    { \r\n      original: '/images/no-product-available.png', \r\n      thumbnail: '/images/no-product-available.png',\r\n      originalAlt: productDetailResponse?.data?.name,\r\n      thumbnailAlt: productDetailResponse?.data?.name,\r\n    }\r\n  ];\r\n\r\n  const handleIncrease = () => {\r\n    setWishlistLoading(true);\r\n    if(user.length === 0) {\r\n      setUserLoggedOnCart(\"Please login to add items to cart.\")\r\n      dispatch(toggleModal(true));\r\n      setWishlistLoading(false);\r\n      setTimeout(() => {\r\n        setUserLoggedOnCart(\"\")\r\n      }, 1000);\r\n      return;\r\n    }\r\n    if(!userAddress) {\r\n      dispatch(toggleAddressModal({ isOpen: true }));\r\n      setWishlistLoading(false);\r\n    } else {\r\n      const responseObj = {\r\n        sku_id: selected?.sku_id,\r\n        type: 'increase'\r\n      }\r\n      dispatch(addToCartData(responseObj)).finally(() => {\r\n        setSelected((prev) => ({\r\n          ...prev,\r\n          quantity: Number(prev.quantity) + 1, // Update quantity locally\r\n        }));\r\n        dispatch(viewItemsInCartData());\r\n        const responseObj = { \r\n          product_id: product_id ,\r\n        }\r\n        dispatch(productDetailData(responseObj))\r\n        dispatch(setViewCartItems(null));\r\n        setWishlistLoading(false);\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleDecrease = () => {\r\n    setWishlistLoading(true);\r\n    if(user.length === 0) {\r\n      setUserLoggedOnCart(\"Please login to add items to cart.\")\r\n      dispatch(toggleModal(true));\r\n      setWishlistLoading(false);\r\n      setTimeout(() => {\r\n        setUserLoggedOnCart(\"\")\r\n      }, 1000);\r\n      return;\r\n    }\r\n    if(!userAddress) {\r\n      dispatch(toggleAddressModal({ isOpen: true }));\r\n      setWishlistLoading(false);\r\n    } else {\r\n      const responseObj = {\r\n        sku_id: selected?.sku_id,\r\n        type: 'decrease'\r\n      }\r\n      dispatch(addToCartData(responseObj)).finally(() => {\r\n        setSelected((prev) => ({\r\n          ...prev,\r\n          quantity: Math.max(Number(prev.quantity) - 1, 0), // Update quantity, min 0\r\n        }));\r\n        dispatch(viewItemsInCartData());\r\n        const responseObj = { \r\n          product_id: product_id ,\r\n        }\r\n        dispatch(productDetailData(responseObj))\r\n        dispatch(setViewCartItems(null));\r\n        setWishlistLoading(false);\r\n      })\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const scrollToTab = () => {\r\n  //     if (window.innerWidth <= 768) {\r\n  //       // Mobile screen width threshold\r\n  //       tabRefs[activeTab].current.scrollIntoView({ behavior: \"smooth\" });\r\n  //     }\r\n  //   };\r\n  //   scrollToTab();\r\n  // }, [activeTab]);\r\n\r\n  function capitalizeFirstLetter(string) {\r\n    return string.replace(/\\b\\w/g, (char) => char.toUpperCase());\r\n  }\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) =>\r\n        prevProgress >= 100 ? 0 : prevProgress + 10\r\n      );\r\n    }, 800);\r\n    // get Address List\r\n    // const responseObj = {\r\n    //   offset: 0,\r\n    //   limit: 10,\r\n    // };\r\n    // dispatch(getListAddress(responseObj))\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  // Handle input changes\r\n  const handleReviewChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n\r\n    // Clear error message when user starts typing\r\n    setErrors({\r\n      ...errors,\r\n      [name]: \"\",\r\n    });\r\n  };\r\n\r\n  const handleOpenReviewBox = () => {\r\n    handleActiveTabs(2);\r\n    window.scrollTo({\r\n      top: 800,\r\n      behavior: \"smooth\", // For smooth scrolling\r\n    });\r\n  }\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    let isValid = true;\r\n\r\n    if (!formData.fullName.trim()) {\r\n      newErrors.fullName = \"Full Name is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = \"Email is required.\";\r\n      isValid = false;\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = \"Email is invalid.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.review.trim()) {\r\n      newErrors.review = \"Review is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if(rating === \"\" || rating === 0) {\r\n      newErrors.rating = \"Rating is required\"\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  // Handle Review form submission\r\n  const handleReviewSubmit = (e) => {\r\n    e.preventDefault();\r\n    const uploadedImages = imageData\r\n      .filter((data) => data.imageId !== \"\") // Exclude empty slots\r\n      .map((data) => data.imageId); // Extract the file objects\r\n    \r\n    if (validate()) {\r\n      const responseObj = {\r\n        product_id: productDetailResponse?.data?.product_id ,\r\n        name: formData.fullName,\r\n        email: formData.email,\r\n        ratings: rating,\r\n        review_text: formData.review,\r\n        image_id: uploadedImages,\r\n      }\r\n      dispatch(addReviewProductData(responseObj)).finally(() => {\r\n        const searchParams = new URLSearchParams(location.search); \r\n        const pageParam = parseInt(searchParams.get(\"page\"), 10) || 1;\r\n        const itemsPerPageParam = parseInt(searchParams.get(\"itemsPerPage\"), 10) || reviewPerPage;\r\n  \r\n        setReviewPage(pageParam - 1); // Adjust for 0-based indexing\r\n        setReviewPerPage(itemsPerPageParam);\r\n  \r\n        const offset = ((pageParam - 1) * itemsPerPageParam) + 1;\r\n        const limit = itemsPerPageParam;\r\n       const reponseReviewObj = {\r\n         product_id: productDetailResponse?.data?.product_id || product_id,\r\n         offset,\r\n         limit\r\n       }\r\n       dispatch(getReviewProductData(reponseReviewObj))\r\n      })\r\n\r\n      setFormData({\r\n        fullName: \"\",\r\n        email: \"\",\r\n        review: \"\",\r\n      });\r\n      setRating(0);\r\n      setImageData([\r\n        { imageId: '', imageUrl: '', preview: ''  },\r\n        { imageId: '', imageUrl: '', preview: ''  },\r\n        { imageId: '', imageUrl: '', preview: ''  },\r\n        { imageId: '', imageUrl: '', preview: ''  },\r\n        { imageId: '', imageUrl: '', preview: ''  },\r\n      ]);\r\n      setShowReviewForm(false);\r\n    }\r\n  };\r\n\r\n  const toggleReviewForm = () => {\r\n    if(user.length === 0) {\r\n      setUserLoggedOnReview(\"Please login to add review.\")\r\n      dispatch(toggleModal(true));\r\n      return;\r\n    }\r\n    setShowReviewForm(!showReviewForm);\r\n    setUserLoggedOnReview(\"\");\r\n  };\r\n\r\n  // Add Item on cart and redirection to cart page on But Now button click\r\n  const handleBuyNowProduct = () => {\r\n    if(user.length === 0) {\r\n      setUserLoggedOnBuyNow(\"Please login to add items to cart.\")\r\n      dispatch(toggleModal(true));\r\n      return;\r\n    }\r\n    if(!userAddress) {\r\n      dispatch(toggleAddressModal({ isOpen: true }));\r\n    } else {\r\n        const responseObj = {\r\n          sku_id: productDetailResponse?.data.variants[0]?.sku_id,\r\n          type: 'increase'\r\n        }\r\n        dispatch(addToCartData(responseObj)).finally(() => {\r\n          // if (addToCartStatusCount === 200) { // Assuming `status` in payload indicates success\r\n            setUserLoggedOnBuyNow(\"\")\r\n            dispatch(viewItemsInCartData());\r\n            const responseObj = { \r\n              product_id: product_id ,\r\n            }\r\n            dispatch(productDetailData(responseObj))\r\n            dispatch(setViewCartItems(null));\r\n            navigate(\"/cart\");\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleAddToCartClick = (sku_id) => {\r\n      setTriggerSkuId(sku_id);\r\n      const responseObj = {\r\n        sku_id,\r\n        type: \"increase\",\r\n      };\r\n      dispatch(addToCartData(responseObj)).finally(() => {\r\n        fetchUpdatedProductList();\r\n      })\r\n  };\r\n  const handleIncrement = (sku_id) => {\r\n    const responseObj = { sku_id, type: \"increase\" };\r\n    dispatch(addToCartData(responseObj)).finally(() => {\r\n      fetchUpdatedProductList();\r\n    });\r\n  };\r\n\r\n  const handleDecrement = (sku_id) => {\r\n    const responseObj = { sku_id, type: \"decrease\" };\r\n    dispatch(addToCartData(responseObj)).finally(() => {\r\n      fetchUpdatedProductList();\r\n    });\r\n  };\r\n\r\n  const fetchUpdatedProductList = () => {\r\n    const pageParam = parseInt(searchParams.get(\"recentViewPage\"), 10) || 1;\r\n    const itemsPerPageParam = parseInt(searchParams.get(\"RecentViewPerPage\"), 10) || recentViewPerPage;\r\n\r\n    setRecentViewPage(pageParam - 1); // Adjust for 0-based indexing\r\n    setRecentViewPerPage(itemsPerPageParam);\r\n\r\n    const offset = ((pageParam - 1) * itemsPerPageParam) + 1;\r\n    const limit = itemsPerPageParam;\r\n\r\n    setRecentlyViewLoading(true);\r\n    const responseObj = {\r\n      offset,\r\n      limit\r\n    }\r\n    dispatch(getAllRecentViewData(responseObj)).finally(() => {\r\n      setRecentlyViewLoading(false);\r\n    });\r\n    dispatch(viewItemsInCartData());\r\n    dispatch(setViewCartItems(null));\r\n  };\r\n\r\n  // Adding Product on whistlist\r\n  const handleWishlistToggle = (productData) => {\r\n    setWishlistLoading(true);\r\n    if(user.length === 0) {\r\n      setUserLoggedOnWishList(\"Please login to add items to wishlist.\")\r\n      dispatch(toggleModal(true));\r\n      setWishlistLoading(false);\r\n      return;\r\n    }\r\n\r\n    let responseObj;\r\n    if(productData?.variants) {\r\n      responseObj = { sku_id: Number(productData?.variants[0]?.sku_id) }\r\n    } else  {\r\n      responseObj = { sku_id: Number(productData?.sku_id) }\r\n    }\r\n    if(productData?.variants) {\r\n      if(productData?.wishlist_status?.toLowerCase() === 'no') {\r\n        dispatch(addProductOnWhistList(responseObj)).finally(() => {\r\n          const responseObj = { \r\n            product_id: product_id ,\r\n          }\r\n          dispatch(productDetailData(responseObj))\r\n          setWishlistLoading(false);\r\n        })\r\n      } else {\r\n          dispatch(deleteSingleWhistListData(responseObj)).finally(() => {\r\n            const responseObj = { \r\n              product_id: product_id ,\r\n            }\r\n            dispatch(productDetailData(responseObj))\r\n            setWishlistLoading(false);\r\n          })\r\n      }\r\n    } else {\r\n      if(productData?.wishlistStatus?.toLowerCase() === 'no') {\r\n        dispatch(addProductOnWhistList(responseObj)).finally(() => {\r\n          const responseObj = { \r\n            product_id: product_id ,\r\n          }\r\n          dispatch(productDetailData(responseObj))\r\n          fetchUpdatedProductList();\r\n          fetchUpdatedSimilarProductList();\r\n          setWishlistLoading(false);\r\n        })\r\n      } else {\r\n          dispatch(deleteSingleWhistListData(responseObj)).finally(() => {\r\n            const responseObj = { \r\n              product_id: product_id ,\r\n            }\r\n            dispatch(productDetailData(responseObj))\r\n            fetchUpdatedProductList();\r\n            fetchUpdatedSimilarProductList();\r\n            setWishlistLoading(false);\r\n          })\r\n      }\r\n    }\r\n    setUserLoggedOnWishList(\"\")\r\n  };\r\n\r\n  // select size and color of product\r\n  useEffect(() => {\r\n    if (\r\n        productDetailResponse?.data?.variants && \r\n        productDetailResponse?.data?.variants.length > 0 && \r\n        !isSelectedInitialized) {\r\n      const firstItem = productDetailResponse?.data?.variants[0];\r\n      setSelected({\r\n        sku_id: firstItem.sku_id,\r\n        color: firstItem.color,\r\n        size: firstItem.size,\r\n        quantity: firstItem.quantity,\r\n        currentPrice: firstItem.sku_price?.current,\r\n        originalPrice: firstItem.sku_price?.original,\r\n        discount: firstItem.sku_price?.discount_percentage,\r\n      });\r\n      setIsSelectedInitialized(true); // Mark selected as initialized\r\n    }\r\n  }, [productDetailResponse, isSelectedInitialized]);\r\n  \r\n  const handleColorClick = (item) => {\r\n    setSelected({ \r\n      sku_id: item?.sku_id,\r\n      color: item?.color, \r\n      size: item?.size, \r\n      quantity: item?.quantity, \r\n      currentPrice: item?.sku_price?.current,\r\n      discount: item?.sku_price?.discount_percentage,\r\n      originalPrice: item?.sku_price?.original,\r\n    });\r\n  };\r\n  \r\n   // Function to handle image upload and preview\r\n   const handleImageUpload = (e, index) => {\r\n    const file = e.target.files[0];\r\n    \r\n    if (file && file.type.startsWith(\"image/\")) {\r\n      const responseObj = {\r\n        product_id,\r\n        images: file,\r\n      };\r\n\r\n      // Set loading state for the specific image index\r\n      setImageLoading((prev) => {\r\n        const updatedLoading = [...prev];\r\n        updatedLoading[index] = true;\r\n        return updatedLoading;\r\n      });\r\n  \r\n      // Dispatch the API call to upload the image\r\n      // dispatch(setGetAnReviewImage(null));\r\n      dispatch(addReviewProductImageData(responseObj))\r\n      .then((updatedImage) => {\r\n        if (updatedImage?.imageId && updatedImage?.imageUrl) {\r\n          setImageData((prev) => {\r\n            const updatedImageData = [...prev];\r\n            updatedImageData[index] = {\r\n              imageId: updatedImage.imageId,\r\n              imageUrl: updatedImage.imageUrl,\r\n              preview: updatedImage.imageUrl,\r\n            };\r\n            return updatedImageData;\r\n          });\r\n        } else {\r\n          console.error(\"Image upload response is invalid.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error uploading image:\", error);\r\n      })\r\n      .finally(() => {\r\n        // Clear loading state for the specific image index\r\n        setImageLoading((prev) => {\r\n          const updatedLoading = [...prev];\r\n          updatedLoading[index] = false;\r\n          return updatedLoading;\r\n        });\r\n      });\r\n    } else {\r\n      setErrorFileType(\"Please upload a valid image file\");\r\n    }\r\n  }\r\n\r\n  const handleRatingChange = (newRating) => {\r\n    setRating(newRating);\r\n  };\r\n  // get reviews on page load \r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(location.search); \r\n    const pageParam = parseInt(searchParams.get(\"page\"), 10) || 1;\r\n    const itemsPerPageParam = parseInt(searchParams.get(\"itemsPerPage\"), 10) || reviewPerPage;\r\n\r\n    setReviewPage(pageParam - 1); // Adjust for 0-based indexing\r\n    setReviewPerPage(itemsPerPageParam);\r\n\r\n    const offset = ((pageParam - 1) * itemsPerPageParam) + 1;\r\n    const limit = itemsPerPageParam;\r\n    const repoonseReviewObj = {\r\n      product_id: productDetailResponse?.data?.product_id,\r\n      offset,\r\n      limit, \r\n    }\r\n    dispatch(getReviewProductData(repoonseReviewObj))\r\n  }, [dispatch, location.search, productDetailResponse?.data?.product_id, reviewPerPage])\r\n  const handleActiveTabs = (value) => {\r\n    if(activeTab == 2) {\r\n      const searchParams = new URLSearchParams(location.search); \r\n      const pageParam = parseInt(searchParams.get(\"page\"), 10) || 1;\r\n      const itemsPerPageParam = parseInt(searchParams.get(\"itemsPerPage\"), 10) || reviewPerPage;\r\n\r\n      setReviewPage(pageParam - 1); // Adjust for 0-based indexing\r\n      setReviewPerPage(itemsPerPageParam);\r\n\r\n      const offset = ((pageParam - 1) * itemsPerPageParam) + 1;\r\n      const limit = itemsPerPageParam;\r\n      const repoonseReviewObj = {\r\n        product_id: productDetailResponse?.data?.product_id,\r\n        offset,\r\n        limit, \r\n      }\r\n      dispatch(getReviewProductData(repoonseReviewObj))\r\n    }\r\n    setActiveTab(value); \r\n  }\r\n  \r\n   // pagination with API call for Review Items\r\n   useEffect(() => {\r\n       const searchParams = new URLSearchParams(location.search); \r\n       const pageParam = parseInt(searchParams.get(\"page\"), 10) || 1;\r\n       const itemsPerPageParam = parseInt(searchParams.get(\"itemsPerPage\"), 10) || reviewPerPage;\r\n \r\n       setReviewPage(pageParam - 1); // Adjust for 0-based indexing\r\n       setReviewPerPage(itemsPerPageParam);\r\n \r\n       const offset = ((pageParam - 1) * itemsPerPageParam) + 1;\r\n       const limit = itemsPerPageParam;\r\n \r\n       setreviewLoading(true);\r\n       const reponseReviewObj = {\r\n        product_id: productDetailResponse?.data?.product_id || product_id,\r\n        offset,\r\n        limit,\r\n      }\r\n      dispatch(getReviewProductData(reponseReviewObj)).finally(() => {\r\n        setreviewLoading(false);\r\n       });\r\n   }, [location.search, reviewPerPage, dispatch]);  // Trigger this effect when the URL's query or page changes\r\n  \r\n   // Handle dropdown change for Review itemsPerPage\r\n  const handleReviewPerPageChange = (e) => {\r\n    const newItemsPerPage = parseInt(e.target.value, 10);\r\n    setReviewPerPage(newItemsPerPage);\r\n    setReviewPage(0); // Reset to the first page\r\n    const searchParams = new URLSearchParams(location.search);\r\n    searchParams.set(\"page\", 1);\r\n    searchParams.set(\"itemsPerPage\", newItemsPerPage);\r\n    navigate(`?${searchParams.toString()}`);\r\n  };\r\n  \r\n  // Handle page change for Review pagination\r\n  const handleReviewPageChange = (data) => {\r\n    const { selected } = data; // `react-paginate` provides 0-based page index\r\n    const searchParams = new URLSearchParams(location.search);\r\n    searchParams.set(\"page\", selected + 1); // Convert to 1-based indexing\r\n    navigate(`?${searchParams.toString()}`); // Update URL\r\n  };\r\n\r\n  // Dropdown options for Review itemsPerPage\r\n  const reviewItemsPerPageOptions = DEFAULT_OPTIONS.filter(option => option <= getReviewCount);\r\n\r\n  const handleProductClick = (product) => {\r\n    if(user.length === 0) {\r\n      dispatch(toggleModal(true));\r\n    } else {\r\n      const responseObj = { product_id: product.product_id };\r\n      dispatch(productDetailData(responseObj));\r\n      navigate(`/product/${product.product_id}`, { state: { product } });\r\n    }\r\n  };\r\n\r\n  const handleProcuctImageClick = (product) => {\r\n    const responseObj = { product_id: product.product_id };\r\n    dispatch(productDetailData(responseObj));\r\n    navigate(`/product/${product.product_id}`, { state: { product } });\r\n  }\r\n\r\n  // pagination with API call for recently viewed Items\r\n  const searchParams = new URLSearchParams(location.search); \r\n  useEffect(() => {\r\n      const pageParam = parseInt(searchParams.get(\"recentViewPage\"), 10) || 1;\r\n      const itemsPerPageParam = parseInt(searchParams.get(\"RecentViewPerPage\"), 10) || recentViewPerPage;\r\n\r\n      setRecentViewPage(pageParam - 1); // Adjust for 0-based indexing\r\n      setRecentViewPerPage(itemsPerPageParam);\r\n\r\n      const offset = ((pageParam - 1) * itemsPerPageParam) + 1;\r\n      const limit = itemsPerPageParam;\r\n\r\n      setRecentlyViewLoading(true);\r\n      const responseObj = {\r\n        offset,\r\n        limit\r\n      }\r\n      dispatch(getAllRecentViewData(responseObj)).finally(() => {\r\n        setRecentlyViewLoading(false);\r\n      });\r\n  }, [\r\n    searchParams.get(\"recentViewPage\"), \r\n    searchParams.get(\"RecentViewPerPage\"),\r\n    dispatch]);  // Trigger this effect when the URL's query or page changes\r\n\r\n  // Handle page change event (when user clicks next/previous)\r\n  const handleRecentViewPageChange = (data) => {\r\n    const { selected } = data;\r\n    searchParams.set(\"recentViewPage\", selected + 1); // Convert to 1-based indexing\r\n    navigate(`?${searchParams.toString()}`);\r\n  };\r\n\r\n  // Handle dropdown change for itemsPerPage\r\n  const handleRecentViewItemsPerPageChange = (e) => {\r\n    const newItemsPerPage = parseInt(e.target.value, 10);\r\n    searchParams.set(\"recentViewPage\", 1);\r\n    searchParams.set(\"RecentViewPerPage\", newItemsPerPage);\r\n    navigate(`?${searchParams.toString()}`);\r\n  };\r\n\r\n  // Calculate total pages based on total results\r\n  const recentViewItemsPerPageOptions = DEFAULT_OPTIONS.filter(option => option <= totalRecentView);\r\n\r\n  // pagination with API call for Similar product Items\r\n  const similarProductParams = new URLSearchParams(location.search); \r\n  useEffect(() => {\r\n      if(product_id === undefined) {\r\n        return\r\n      }\r\n      const pageParam = parseInt(similarProductParams.get(\"SimilarViewPage\"), 10) || 1;\r\n      const itemsPerPageParam = parseInt(similarProductParams.get(\"SimilarViewPerPage\"), 10) || similarProductPerPage;\r\n\r\n      setSimilarProductPage(pageParam - 1); // Adjust for 0-based indexing\r\n      setSimilarProductPerPage(itemsPerPageParam);\r\n\r\n      const offset = ((pageParam - 1) * itemsPerPageParam) + 1;\r\n      const limit = itemsPerPageParam;\r\n\r\n      setSimilarProductLoading(true);\r\n      const similarProductPayload = {\r\n        product_id: product_id,\r\n        offset,\r\n        limit\r\n      }\r\n      dispatch(similarProductData(similarProductPayload)).finally(() => {\r\n        setSimilarProductLoading(false);\r\n        const responseObj = { \r\n          product_id: product_id ,\r\n        }\r\n        dispatch(productDetailData(responseObj))\r\n      });\r\n  }, [\r\n    similarProductParams.get(\"SimilarViewPage\"), \r\n    similarProductParams.get(\"SimilarViewPerPage\"), \r\n    product_id, \r\n    dispatch]);  // Trigger this effect when the URL's query or page changes\r\n\r\n  // Handle page change event (when user clicks next/previous)\r\n  const handleSimilarViewPageChange = (data) => {\r\n    const { selected } = data;\r\n    similarProductParams.set(\"SimilarViewPage\", selected + 1); // Convert to 1-based indexing\r\n    navigate(`?${similarProductParams.toString()}`);\r\n  };\r\n\r\n  // Handle dropdown change for itemsPerPage\r\n  const handleSimilarViewItemsPerPageChange = (e) => {\r\n    const newItemsPerPage = parseInt(e.target.value, 10);\r\n    similarProductParams.set(\"SimilarViewPage\", 1);\r\n    similarProductParams.set(\"SimilarViewPerPage\", newItemsPerPage);\r\n    navigate(`?${similarProductParams.toString()}`);\r\n  };\r\n\r\n  // Calculate total pages based on total results\r\n  const similarViewItemsPerPageOptions = DEFAULT_OPTIONS.filter(option => option <= similarProductCount);\r\n  const handleAddToSimilarCartClick = (sku_id) => {\r\n    setTriggerSkuId(sku_id);\r\n    const responseObj = {\r\n      sku_id,\r\n      type: \"increase\",\r\n    };\r\n    dispatch(addToCartData(responseObj)).finally(() => {\r\n      fetchUpdatedSimilarProductList();\r\n    })\r\n  };\r\n  const handleSimilarIncrement = (sku_id) => {\r\n    const responseObj = { sku_id, type: \"increase\" };\r\n    dispatch(addToCartData(responseObj)).finally(() => {\r\n      fetchUpdatedSimilarProductList();\r\n    });\r\n  };\r\n\r\n  const handleSimilarDecrement = (sku_id) => {\r\n    const responseObj = { sku_id, type: \"decrease\" };\r\n    dispatch(addToCartData(responseObj)).finally(() => {\r\n      fetchUpdatedSimilarProductList();\r\n    });\r\n  };\r\n\r\n  const fetchUpdatedSimilarProductList = () => {\r\n    const pageParam = parseInt(similarProductParams.get(\"SimilarViewPage\"), 10) || 1;\r\n    const itemsPerPageParam = parseInt(similarProductParams.get(\"SimilarViewPerPage\"), 10) || similarProductPerPage;\r\n\r\n    setSimilarProductPage(pageParam - 1); // Adjust for 0-based indexing\r\n    setSimilarProductPerPage(itemsPerPageParam);\r\n\r\n    const offset = ((pageParam - 1) * itemsPerPageParam) + 1;\r\n    const limit = itemsPerPageParam;\r\n\r\n    setSimilarProductLoading(true);\r\n    const similarProductPayload = {\r\n      product_id: product_id,\r\n      offset,\r\n      limit\r\n    }\r\n    dispatch(similarProductData(similarProductPayload)).finally(() => {\r\n      setSimilarProductLoading(false);\r\n      const responseObj = { \r\n        product_id: product_id ,\r\n      }\r\n      dispatch(productDetailData(responseObj))\r\n    });\r\n    dispatch(viewItemsInCartData());\r\n    dispatch(setViewCartItems(null));\r\n  }\r\n  const currentUrl = window.location.href;\r\n  const baseUrl = window.origin;\r\n  return (\r\n      <div>\r\n        <Helmet>\r\n            <title>{productDetailResponse?.data?.name}</title>\r\n            <meta name=\"description\" content={productDetailResponse?.data?.description.content[0]} />\r\n            {/* <!-- Open Graph / Facebook --> */}\r\n            <meta property=\"og:title\" content={productDetailResponse?.data?.name} />\r\n            <meta property=\"og:description\" content={productDetailResponse?.data?.description.content[0]} />\r\n            <meta property=\"og:image\" content={`${baseUrl}/images/icons/LOGO1.png`} />\r\n            <meta property=\"og:url\" content={currentUrl} />\r\n            <meta property=\"og:type\" content=\"Product\" />\r\n            {/* <!-- Twitter --> */}\r\n            <meta property=\"twitter:card\" content=\"article\" />\r\n            <meta property=\"twitter:url\" content={currentUrl} />\r\n            <meta property=\"twitter:title\" content={productDetailResponse?.data?.name} />\r\n            <meta property=\"twitter:description\" content={productDetailResponse?.data?.description.content[0]} />\r\n            <meta property=\"twitter:image\" content={`${baseUrl}/images/icons/LOGO1.png`} />\r\n        </Helmet>\r\n        {wistlistLoading && \r\n          <div className=\"wishlistLoadingContainer\">\r\n            <CircularProgress />\r\n          </div>\r\n        }\r\n        {loading ? (\r\n          <div className=\"loadingContainer\">\r\n            <CircularProgress />\r\n          </div>\r\n          ) : (product_id === \"undefined\") || (productDetailResponse === null) ? (\r\n            <p className=\"prdDetailNotFound\">No Product found</p>\r\n          ) : (\r\n          <div className=\"prdDetail\">\r\n            <ProductSchemaMarkup product={productDetailResponse} />\r\n            <ProductSlider title={false} tile={10} />\r\n            {/* <div className=\"listPageCategoryItems\">\r\n              <CategorySlider subCategoryId={subcategory_id}  />\r\n            </div> */}\r\n            <div className=\"productDetailInfo\">\r\n              <div className=\"leftDetailInfo\">\r\n                <ImageGallery items={images} />\r\n              </div>\r\n              <div className=\"rightDetailInfo\">\r\n                <div className=\"leftBar\">\r\n                  <div className=\"bestOption\">\r\n                    {productDetailResponse?.data?.seller?.ratings && \r\n                    !isNaN(parseFloat(productDetailResponse?.data?.seller.ratings)) && (\r\n                        <div className=\"ribbon\">\r\n                          {parseFloat(productDetailResponse?.data?.seller.ratings) >= 4.5\r\n                            ? '#Best Seller'\r\n                            : `Seller rating: ${productDetailResponse?.data?.seller.ratings}`\r\n                          }\r\n                        </div>\r\n                      )}\r\n                    <div className=\"whislistBox\">\r\n                      <div\r\n                        onClick={() => handleWishlistToggle(productDetailResponse?.data)}\r\n                        className=\"wishlist-btn\"\r\n                      >\r\n                        {productDetailResponse?.data?.wishlist_status?.toLowerCase() === 'yes' ? (\r\n                          <img\r\n                            src={whistListBox.whistlistFill}\r\n                            alt=\"Whistlist Product\"\r\n                          />\r\n                        ) : (\r\n                          <img src={whistListBox.whistlist} alt=\"Whistlist Product\" />\r\n                        )}\r\n                      </div>\r\n                      <img src={whistListBox.share} alt=\"Share Product\" onClick={() => ShareProduct(productDetailResponse?.data?.product_id)} />\r\n                    </div>\r\n                  </div>\r\n                  {user.length == 0 && <p className=\"cartError error\">{userLoggedOnWishLists}</p>}\r\n                  <h1>{productDetailResponse?.data?.name}</h1>\r\n                  {productDetailResponse?.data?.ratings && <div className=\"ratingBox\">\r\n                    <span>{productDetailResponse?.data?.ratings?.average}</span>\r\n                    {productDetailResponse?.data?.ratings && <StarRating userrating={productDetailResponse?.data?.ratings?.average} />}\r\n                    <div className=\"reviews\" onClick={handleOpenReviewBox}>\r\n                      {productDetailResponse?.data?.ratings?.total_reviews || 0} reviews\r\n                    </div>\r\n                  </div>}\r\n                  <div className=\"priceSection\">\r\n                    <div className=\"priceList\">\r\n                      <p className=\"discount\">£ {Number(selected.currentPrice).toFixed(2)}</p>\r\n                      <p className=\"original\">£ {Number(selected.originalPrice).toFixed(2)}</p>\r\n                    </div>\r\n                    {selected && (\r\n                      <p className=\"discountLabel\"> {selected.discount + \" Off\"}</p>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"cartSection\">\r\n                    <div className={`cartInputBox`} >\r\n                      <div className=\"increase\" onClick={handleIncrease}>\r\n                        +\r\n                      </div>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"cart\"\r\n                        value={selected.quantity}\r\n                        min=\"1\"\r\n                        disabled\r\n                      />\r\n                      <div className=\"decrease\" onClick={handleDecrease}>\r\n                        -\r\n                      </div>\r\n                    </div>\r\n                    {/* <button\r\n                      type=\"button\"\r\n                      className={`addToCart ${handleCartButtonOnLoad == 0 ? '' : 'disabled'}`}\r\n                      onClick={handleAddToCart}\r\n                    >\r\n                      Add to cart\r\n                    </button> */}\r\n                    {selected.size == '' && <p className=\"cartError error\">{sizeError}</p>}\r\n                    {user.length == 0 && <p className=\"cartError error\">{userLoggedOnCart}</p>}\r\n                  </div>\r\n                  <div className=\"productColor\">\r\n                    Color & Size: <span>{selected?.color} , {selected?.size}</span>\r\n                  </div>\r\n                  <div className=\"ProductColorBoxes\">\r\n                    {productDetailResponse?.data?.variants &&\r\n                      productDetailResponse?.data?.variants\r\n                      .map((item) => (\r\n                        // productDetailResponse?.data?.variants.map((item) => (\r\n                        <div\r\n                          onClick={() => handleColorClick(item)} // Update color on click\r\n                          className={`${selected.sku_id === item.sku_id ? 'selected' : ''}`}\r\n                          key={item.sku_id}>\r\n                            <img\r\n                              key={item.sku_id}\r\n                              src={item.color_image}\r\n                              alt={item.color}\r\n                              className=\"colorImage\"\r\n                            />\r\n                            <p>{item.size}</p>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n\r\n                  {/* <div className=\"gaurnteeMessage\">\r\n                    <ul>\r\n                      {gaurnteeMessage?.map((item, index) => (\r\n                        <li key={index}>\r\n                          <img src={item.image} alt={item.name} />\r\n                          <p>{item.name}</p>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div> */}\r\n                  <div className=\"detailBtn\">\r\n                    <button type=\"button\" onClick={() => handleBuyNowProduct()}>Buy Now</button>\r\n                  </div>\r\n                  {user.length == 0 && <p className=\"cartError error\">{userLoggedOnBuyNow}</p>}\r\n                  {!userAddress && <p className=\"cartError error\">{defaultAddressError}</p>}\r\n                </div>\r\n                <div className=\"rightBar\">\r\n                  <div className=\"estimatedDelivery\">\r\n                    <h4>Estimated Delivery</h4>\r\n                    <p>{\"Delivered in \" + productDetailResponse?.data?.estimated_delivery_time}</p>\r\n                    {/* <span>{product.freedelivery}</span> */}\r\n                  </div>\r\n                  <div className=\"commitment\">\r\n                    <h4>FikFis Commitments</h4>\r\n                    <ul>\r\n                      {productDetailResponse?.fikfisCommitment?.map((data, index) => (\r\n                        <li key={index}>{data}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"availableOffers\">\r\n                    <h4>Available Offers</h4>\r\n                    {productDetailResponse?.availableOffers?.length > 0 ? (\r\n                      <ul>\r\n                        {productDetailResponse?.availableOffers.map((data, index) => (\r\n                          <li key={index}>{data}</li>\r\n                        ))}\r\n                      </ul>\r\n                    ) : (\r\n                      <p>No offers available at the moment.</p>\r\n                    )}\r\n                  </div>\r\n                  {/* <div className=\"stockItemLeft\">\r\n                    Hurry! Only {productDetailResponse?.data?.availability?.stock_count} Items Left In Stock\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"productHistory allcategory\">\r\n              {recentView && recentView.length > 0 && \r\n                <div className=\"baseAlignItems\">\r\n                  <h3>Recently Viewed</h3>\r\n                </div>\r\n              }\r\n                {recentlyViewLoading ? (\r\n                  <div className=\"loadingContainer\">\r\n                    <CircularProgress />\r\n                  </div>\r\n                  ):(\r\n                    <>\r\n                      <div className=\"productList\">\r\n                        {recentView && recentView.length > 0 && (\r\n                            recentView.map((item, index) => (\r\n                              <div key={index}>\r\n                                <ProductListCard\r\n                                  id={item.product_id}\r\n                                  image={item.imageUrl || \"/images/no-product-available.png\"}\r\n                                  name={item.name || \"\"}\r\n                                  userrating={item.rating || \"0.0\"}\r\n                                  discountPrice={item.discount || \"\"}\r\n                                  originalPrice={item.price || \"\"}\r\n                                  save={item.save || \"\"}\r\n                                  coupenCode={item.coupen || \"\"}\r\n                                  deliveryTime={item.deliverytime || \"\"}\r\n                                  freeDelivery={item.freedelivery || \"\"}\r\n                                  bestSeller={item.bestseller || \"\"}\r\n                                  time={item.time || \"\"}\r\n                                  discountLabel={item.Offerprice || \"\"}\r\n                                  wishlistStatus={item.wishlistStatus || ''}\r\n                                  sku_id={item.sku_id} // Pass SKU ID for Add to Cart\r\n                                  // onAddToCart={() => handleAddToCartClick(item.sku_id)}\r\n                                  onAddToCart={() => handleProductClick(item)}\r\n                                  cartQuantity={Number(item.cartQuantity)}\r\n                                  onIncrement={handleIncrement}\r\n                                  onDecrement={handleDecrement}\r\n                                  onProductClick={() => handleProductClick(item)}\r\n                                  onProductImageClick={() => handleProcuctImageClick(item)}\r\n                                  handleWishlistToggle={() => handleWishlistToggle(item)}\r\n                                />\r\n                              </div>\r\n                            ))\r\n                          )}\r\n                      </div>\r\n                      {recentView && recentView.length > 0 &&\r\n                        <div className=\"paginationBox\">\r\n                          {/* <div className=\"itemsPerPageDropdown\">\r\n                              <label>Items per page: </label>\r\n                              <select value={recentViewPerPage} onChange={handleRecentViewItemsPerPageChange}>\r\n                                  {recentViewItemsPerPageOptions.map(option => (\r\n                                      <option key={option} value={option}>\r\n                                          {option}\r\n                                      </option>\r\n                                  ))}\r\n                              </select>\r\n                          </div> */}\r\n                          <ReactPaginate\r\n                              previousLabel={\"Previous\"}\r\n                              nextLabel={\"Next\"}\r\n                              breakLabel={\"...\"}\r\n                              pageCount={Math.max(Math.ceil(totalRecentView / recentViewPerPage), 1)}\r\n                              marginPagesDisplayed={2}\r\n                              pageRangeDisplayed={3}\r\n                              onPageChange={handleRecentViewPageChange}\r\n                              containerClassName={\"pagination\"}\r\n                              activeClassName={\"active\"}\r\n                              forcePage={recentViewPage}\r\n                              disabled={totalRecentView === 0}\r\n                          />\r\n                        </div>\r\n                      }\r\n                    </>\r\n                )}\r\n            </div>\r\n            <div className=\"productHistory allcategory\">\r\n              {productDetailResponse?.data?.similar_products && \r\n                productDetailResponse?.data?.similar_products.length > 0 &&  \r\n                <div className=\"baseAlignItems\">\r\n                  <h3>Frequently bought</h3>\r\n                </div>\r\n              }\r\n              {similarProductLoading ? (\r\n                <div className=\"loadingContainer\">\r\n                  <CircularProgress />\r\n                </div>\r\n                ): (\r\n                  <>\r\n                    <div className=\"productList\">\r\n                      {similarProductListResponse && similarProductListResponse.length > 0 && (\r\n                        similarProductListResponse.map((item, index) => (\r\n                          <div key={index}>\r\n                            <ProductListCard\r\n                              id={item.product_id}\r\n                              image={item.image || \"/images/no-product-available.png\"}\r\n                              name={item.name || \"\"}\r\n                              userrating={item.rating || \"0.0\"}\r\n                              discountPrice={item.discount || \"\"}\r\n                              originalPrice={item.price || \"\"}\r\n                              save={item.save || \"\"}\r\n                              coupenCode={item.coupen || \"\"}\r\n                              deliveryTime={item.deliverytime || \"\"}\r\n                              freeDelivery={item.freedelivery || \"\"}\r\n                              bestSeller={item.bestseller || \"\"}\r\n                              time={item.time || \"\"}\r\n                              discountLabel={item.Offerprice || \"\"}\r\n                              wishlistStatus={item.wishlistStatus || ''}\r\n                              sku_id={item.sku_id} // Pass SKU ID for Add to Cart\r\n                              // onAddToCart={() => handleAddToCartClick(item.sku_id)}\r\n                              onAddToCart={() => handleProductClick(item)}\r\n                              cartQuantity={Number(item.cart_quantity)}\r\n                              onIncrement={handleSimilarIncrement}\r\n                              onDecrement={handleSimilarDecrement}\r\n                              onProductClick={() => handleProductClick(item)}\r\n                              onProductImageClick={() => handleProcuctImageClick(item)}\r\n                              handleWishlistToggle={() => handleWishlistToggle(item)}\r\n                            />\r\n                          </div>\r\n                        ))\r\n                      )}\r\n                    </div>\r\n                    <div className=\"paginationBox\">\r\n                      {/* <div className=\"itemsPerPageDropdown\">\r\n                          <label>Items per page: </label>\r\n                          <select value={similarProductPerPage} onChange={handleSimilarViewItemsPerPageChange}>\r\n                              {similarViewItemsPerPageOptions.map(option => (\r\n                                  <option key={option} value={option}>\r\n                                      {option}\r\n                                  </option>\r\n                              ))}\r\n                          </select>\r\n                      </div> */}\r\n                      <ReactPaginate\r\n                          previousLabel={\"Previous\"}\r\n                          nextLabel={\"Next\"}\r\n                          breakLabel={\"...\"}\r\n                          pageCount={Math.max(Math.ceil(similarProductCount / similarProductPerPage), 1)}\r\n                          marginPagesDisplayed={2}\r\n                          pageRangeDisplayed={3}\r\n                          onPageChange={handleSimilarViewPageChange}\r\n                          containerClassName={\"pagination\"}\r\n                          activeClassName={\"active\"}\r\n                          forcePage={similarProductPage}\r\n                          disabled={similarProductCount === 0}\r\n                      />\r\n                    </div>\r\n                  </>\r\n              )}\r\n            </div>\r\n            <div className=\"productDetailReview\">\r\n              <div className=\"tabs-container\">\r\n                <div className=\"tabs-buttons\">\r\n                  <h2\r\n                    className={activeTab === 0 ? \"active prdDetailTabsBtn\" : \"prdDetailTabsBtn\"}\r\n                    onClick={() => handleActiveTabs(0)}\r\n                  >\r\n                    Product Description\r\n                  </h2>\r\n                  <h3\r\n                    className={activeTab === 1 ? \"active prdDetailTabsBtn\" : \"prdDetailTabsBtn\"}\r\n                    onClick={() => handleActiveTabs(1)}\r\n                  >\r\n                    Additional Information\r\n                  </h3>\r\n                  <h4\r\n                    className={activeTab === 2 ? \"active prdDetailTabsBtn\" : \"prdDetailTabsBtn\"}\r\n                    onClick={() => handleActiveTabs(2)}\r\n                  >\r\n                    FikFis Verified Reviews\r\n                  </h4>\r\n                </div>\r\n                <div className=\"tabs-content\">\r\n                  <div\r\n                    className=\"tab-content productDescription\"\r\n                    ref={tabRefs[0]}\r\n                    style={{ display: activeTab === 0 ? \"block\" : \"none\" }}\r\n                  >\r\n                    {productDetailResponse?.data?.description && \r\n                      productDetailResponse?.data?.description.content.map((item, index) => (\r\n                      <p key={index}>\r\n                        {item}\r\n                      </p>\r\n                    ))}\r\n                    {productDetailResponse?.data?.description && \r\n                      productDetailResponse?.data?.description.image.map((item, index) => (\r\n                      <img key={index} src={item} alt={'Image_' + index} />\r\n                    ))}\r\n                  </div>\r\n                  <div\r\n                    className=\"tab-content\"\r\n                    ref={tabRefs[1]}\r\n                    style={{ display: activeTab === 1 ? \"block\" : \"none\" }}\r\n                  >\r\n                    <div className=\"additionalInfo\">\r\n                      <div className=\"technical info\">\r\n                        <h5>Technical Details</h5>\r\n                        <table>\r\n                          <tbody>\r\n                            {productDetailResponse?.data?.additional_info?.map(\r\n                              (item, index) => (\r\n                                <tr key={index}>\r\n                                  <td>\r\n                                    {capitalizeFirstLetter(item?.title.replace(/_/g, \" \"))}\r\n                                  </td>\r\n                                  <td>{item.value}</td>\r\n                                </tr>\r\n                              )\r\n                            )}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"tab-content\"\r\n                    ref={tabRefs[2]}\r\n                    style={{ display: activeTab === 2 ? \"block\" : \"none\" }}\r\n                  >\r\n                    <div className=\"reviewSection\">\r\n                      <div className=\"leftReviewPart\">\r\n                        <h4>Customer reviews</h4>\r\n                        {productDetailResponse?.data?.ratings && <StarRating userrating={productDetailResponse?.data?.ratings?.average} />}\r\n                          <div className=\"detailLinearRivewProgress\">\r\n                            <div className=\"reviewProgress\">\r\n                              <span>{'5 star'}</span>\r\n                              <div className=\"progressBar\">\r\n                                <LinearProgressWithLabel\r\n                                  value={parseFloat(productDetailResponse?.data?.ratings?.review_count['5Star'])}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"reviewProgress\">\r\n                              <span>{'4 star'}</span>\r\n                              <div className=\"progressBar\">\r\n                                <LinearProgressWithLabel\r\n                                  value={parseFloat(productDetailResponse?.data?.ratings?.review_count['4Star'])}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"reviewProgress\">\r\n                              <span>{'3 star'}</span>\r\n                              <div className=\"progressBar\">\r\n                                <LinearProgressWithLabel\r\n                                  value={parseFloat(productDetailResponse?.data?.ratings?.review_count['3Star'])}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"reviewProgress\">\r\n                              <span>{'2 star'}</span>\r\n                              <div className=\"progressBar\">\r\n                                <LinearProgressWithLabel\r\n                                  value={parseFloat(productDetailResponse?.data?.ratings?.review_count['2Star'])}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"reviewProgress\">\r\n                              <span>{'1 star'}</span>\r\n                              <div className=\"progressBar\">\r\n                                <LinearProgressWithLabel\r\n                                  value={parseFloat(productDetailResponse?.data?.ratings?.review_count['1Star'])}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"ratingCalculateInfo\">\r\n                            <h4>How are ratings calculated?</h4>\r\n                            <p>\r\n                              To calculate the overall star rating and percentage\r\n                              breakdown by star, we don’t use a simple average. Instead,\r\n                              our system considers things like how recent a review is\r\n                              and if the reviewer bought the item on Amazon. It also\r\n                              analyses reviews to verify trustworthiness.\r\n                            </p>\r\n                          </div>\r\n                        {!showReviewForm && (\r\n                          <div className=\"productReviewBtn\">\r\n                            <button type=\"button\" onClick={toggleReviewForm}>\r\n                              Write Review\r\n                            </button>\r\n                            {user.length == 0 && <p className=\"cartError error\">{userLoggedOnReview}</p>}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"rightCommentPart\">\r\n                        {!showReviewForm && (\r\n                          <>\r\n                            <div className=\"productReviewList\">\r\n                              <div className=\"reviewHeader\">\r\n                                <h4>Customer say..</h4>\r\n                                {getReview?.length > 0 && <div className='paginationBox'>\r\n                                  {/* <div className=\"itemsPerPageDropdown\">\r\n                                      <label>Items per page: </label>\r\n                                      <select value={reviewPerPage} onChange={handleReviewPerPageChange}>\r\n                                          {reviewItemsPerPageOptions.map(option => (\r\n                                              <option key={option} value={option}>\r\n                                                  {option}\r\n                                              </option>\r\n                                          ))}\r\n                                      </select>\r\n                                  </div> */}\r\n                                  {/* Pagination component */}\r\n                                  <ReactPaginate\r\n                                      previousLabel={\"Previous\"}\r\n                                      nextLabel={\"Next\"}\r\n                                      breakLabel={\"...\"}\r\n                                      breakClassName={\"break-me\"}\r\n                                      pageCount={Math.max(Math.ceil(getReviewCount / reviewPerPage), 1)}\r\n                                      marginPagesDisplayed={2}\r\n                                      pageRangeDisplayed={3}\r\n                                      onPageChange={(ev) => handleReviewPageChange(ev)}\r\n                                      containerClassName={\"pagination\"}\r\n                                      activeClassName={\"active\"}\r\n                                      forcePage={reviewPage}  // Sync current page with URL\r\n                                      disabled={getReviewCount === 0} \r\n                                  />\r\n                                  </div>\r\n                                }\r\n                              </div>\r\n                              <div className=\"reviewHeight\">\r\n                                {getReview?.map((item, index) => (\r\n                                  <div className=\"reviewComments\" key={index}>\r\n                                    <div className=\"userImage\">\r\n                                      <img\r\n                                        src={item.profile_image}\r\n                                        alt={item.rate_name}\r\n                                      />\r\n                                    </div>\r\n                                    <div className=\"reviewRightomments\">\r\n                                      <div className=\"userName\">{item.name}</div>\r\n                                      <div className=\"ratingBox\">\r\n                                        {item?.rating && (\r\n                                          <StarRating userrating={item.rating} />\r\n                                        )}\r\n                                        <div className=\"rateusername\">\r\n                                          {item.review_text}\r\n                                        </div>\r\n                                      </div>\r\n                                      {item.description && <p>{item.description}</p>}\r\n                                      <div className=\"reviewed_image\">\r\n                                        {item?.images &&\r\n                                          item?.images.map(\r\n                                            (review_image, index) => (\r\n                                              <img\r\n                                                key={index}\r\n                                                src={review_image}\r\n                                                alt={\"Product Image\"}\r\n                                              />\r\n                                            )\r\n                                          )}\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                ))}\r\n                                {!getReview && <p>Reviews not found.</p>}\r\n                              </div>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                        {showReviewForm && (\r\n                          <div className=\"product_review_form\">\r\n                            <h4>Customer say</h4>\r\n                            <form onSubmit={handleReviewSubmit}>\r\n                              <div className=\"box\">\r\n                                <div className=\"form-control\">\r\n                                  <label for=\"fullname\">Full Name(First and Last name)</label>\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    name=\"fullName\"\r\n                                    placeholder=\"Full Name\"\r\n                                    value={formData.fullName}\r\n                                    onChange={handleReviewChange}\r\n                                  />\r\n                                  {errors.fullName && (\r\n                                    <p className=\"error\">{errors.fullName}</p>\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"form-control\">\r\n                                <label for=\"email\">Email</label>\r\n                                  <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleReviewChange}\r\n                                  />\r\n                                  {errors.email && (\r\n                                    <p className=\"error\">{errors.email}</p>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"box full\">\r\n                                <div className=\"form-control\">\r\n                                  <label for=\"review\">Write your review</label>\r\n                                  <textarea\r\n                                    cols=\"10\"\r\n                                    name=\"review\"\r\n                                    placeholder=\"Write Your Review\"\r\n                                    value={formData.review}\r\n                                    onChange={handleReviewChange}\r\n                                  ></textarea>\r\n                                  {errors.review && (\r\n                                    <p className=\"error\">{errors.review}</p>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"box full images\">\r\n                                {/* <label for=\"Upload Images\">Add Photo</label> */}\r\n                                <div className=\"form-control select\">\r\n                                  {imageData.map((data, index) => (\r\n                                    <div className=\"selectFileBox\" key={index}>\r\n                                      {data.imageUrl && (\r\n                                        <img src={data.imageUrl} alt={`Preview ${index + 1}`} />\r\n                                      )}\r\n                                      {imageLoading[index] ? (\r\n                                        <div className=\"imageLoader\">\r\n                                          <CircularProgress />\r\n                                        </div>\r\n                                      ) :  !data.imageUrl && (\r\n                                        <img src=\"/images/add-file.svg\" alt=\"Select File\" />\r\n                                      )}\r\n                                      <input\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        onChange={(e) => handleImageUpload(e, index)}\r\n                                      />\r\n                                    </div>\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"box full rating\">\r\n                                <label for=\"ratings\">Add Rating</label>\r\n                                <StarRating userrating={rating} onRatingChange={handleRatingChange} />\r\n                                {errors.rating && (\r\n                                  <p className=\"error\">{errors.rating}</p>\r\n                                )}\r\n                              </div>\r\n                              <Button\r\n                                type={\"submit\"}\r\n                                value={\"submit\"}\r\n                                varient=\"explore review\"\r\n                                space=\"sp-10\"\r\n                              />\r\n                            </form>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","export const ShareProduct = async (productId) => {\r\n  const productURL = `${window.location.origin}/product/${productId}`;\r\n\r\n  if (navigator.share) {\r\n    try {\r\n      await navigator.share({\r\n        title: \"Check out this product!\",\r\n        url: productURL,\r\n      });\r\n    } catch (error) {\r\n      // console.error(\"Error sharing product:\", error);\r\n    }\r\n  } else {\r\n    navigator.clipboard.writeText(productURL);\r\n    alert(\"Link copied to clipboard!\");\r\n  }\r\n};\r\n\r\nexport const ShareBlogs = async (blogId) => {\r\n  const blogURL = `${window.location.origin}/blog/${blogId}`;\r\n\r\n  if (navigator.share) {\r\n    try {\r\n      await navigator.share({\r\n        title: \"Check out this blog!\",\r\n        url: blogURL,\r\n      });\r\n    } catch (error) {\r\n      // console.error(\"Error sharing blog:\", error);\r\n    }\r\n  } else {\r\n    navigator.clipboard.writeText(blogURL);\r\n    alert(\"Link copied to clipboard!\");\r\n  }\r\n}\r\n"],"names":["_ref","imgSrc","imgName","handleCategory","activeCategory","_jsxs","className","onClick","children","_jsx","src","alt","subCategoryId","dispatch","useDispatch","navigate","useNavigate","location","useLocation","subCategoryList","useSelector","state","product","activeCategoryId","Slider","slick_category_settings","map","slide","index","CategoryCard","category_image","name","item","responseObj","sub_category_id","id","offset","limit","getProductOnSubCategory","searchParams","URLSearchParams","search","set","delete","toString","handleProductClick","parseInt","value","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","_product$data","_product$data$additio","schemaData","data","images","description","content","variants","sku_id","additional_info","filter","info","title","toLowerCase","includes","window","href","sku_price","current","Helmet","type","JSON","stringify","ProductDetail","_productDetailRespons","_productDetailRespons2","_productDetailRespons3","_productDetailRespons6","_productDetailRespons7","_productDetailRespons15","_productDetailRespons18","_productDetailRespons19","_productDetailRespons20","_productDetailRespons21","_productDetailRespons22","_productDetailRespons23","_productDetailRespons24","_productDetailRespons25","_productDetailRespons26","_productDetailRespons27","_productDetailRespons28","_productDetailRespons29","_productDetailRespons30","_productDetailRespons32","_productDetailRespons33","_productDetailRespons34","_productDetailRespons35","_productDetailRespons36","_productDetailRespons37","_productDetailRespons38","_productDetailRespons39","_productDetailRespons40","_productDetailRespons41","_productDetailRespons42","_productDetailRespons43","_productDetailRespons44","_productDetailRespons45","_productDetailRespons46","_productDetailRespons47","_productDetailRespons48","_productDetailRespons49","_productDetailRespons50","_productDetailRespons51","_productDetailRespons52","_productDetailRespons53","_productDetailRespons54","_productDetailRespons55","_productDetailRespons56","_productDetailRespons57","_productDetailRespons58","_productDetailRespons59","_productDetailRespons60","_productDetailRespons61","_productDetailRespons62","_productDetailRespons63","_productDetailRespons64","_productDetailRespons65","_productDetailRespons66","productDetailResponse","getReview","getReviewCount","similarProductListResponse","similarProductCount","recentView","totalRecentView","user","userAddress","defaultUserAddress","activeTab","setActiveTab","useState","progress","setProgress","React","sizeError","setSizeError","showReviewForm","setShowReviewForm","rating","setRating","whistListBox","setWhistListBox","whistlist","whistlistFill","share","userLoggedOnWishLists","setUserLoggedOnWishList","userLoggedOnCart","setUserLoggedOnCart","userLoggedOnReview","setUserLoggedOnReview","userLoggedOnBuyNow","setUserLoggedOnBuyNow","defaultAddressError","setDefaultAddressError","triggerSkuId","setTriggerSkuId","handleCartButtonOnLoad","setHandleCartButtonOnLoad","imageData","setImageData","imageId","imageUrl","preview","selected","setSelected","size","quantity","currentPrice","originalPrice","discount","isSelectedInitialized","setIsSelectedInitialized","errorFileType","setErrorFileType","reviewPage","setReviewPage","reviewPerPage","setReviewPerPage","recentViewPage","setRecentViewPage","recentViewPerPage","setRecentViewPerPage","similarProductPage","setSimilarProductPage","similarProductPerPage","setSimilarProductPerPage","formData","setFormData","fullName","email","review","errors","setErrors","loading","setLoading","reviewLoading","setreviewLoading","similarProductLoading","setSimilarProductLoading","recentlyViewLoading","setRecentlyViewLoading","imageLoading","setImageLoading","wistlistLoading","setWishlistLoading","pathSegments","pathname","split","product_id","length","useEffect","getListAddress","getHomeData","undefined","productDetailData","finally","setTimeout","_location$state","scrollToBottom","handleActiveTabs","scrollTo","top","behavior","get","tabRefs","useRef","_productDetailRespons4","_productDetailRespons5","original","thumbnail","originalAlt","thumbnailAlt","timer","setInterval","prevProgress","clearInterval","handleReviewChange","e","target","handleIncrement","addToCartData","fetchUpdatedProductList","handleDecrement","pageParam","itemsPerPageParam","getAllRecentViewData","viewItemsInCartData","setViewCartItems","handleWishlistToggle","productData","toggleModal","_productData$variants","_productData$wishlist","_productData$wishlist2","Number","wishlist_status","addProductOnWhistList","deleteSingleWhistListData","wishlistStatus","fetchUpdatedSimilarProductList","_productDetailRespons11","_productDetailRespons12","_productDetailRespons13","_firstItem$sku_price","_firstItem$sku_price2","_firstItem$sku_price3","firstItem","discount_percentage","_productDetailRespons14","repoonseReviewObj","getReviewProductData","_productDetailRespons16","_productDetailRespons17","reponseReviewObj","DEFAULT_OPTIONS","option","handleProcuctImageClick","similarProductParams","similarProductPayload","similarProductData","handleSimilarIncrement","handleSimilarDecrement","currentUrl","baseUrl","origin","property","CircularProgress","ProductSchemaMarkup","ProductSlider","tile","ImageGallery","items","seller","ratings","isNaN","parseFloat","_productDetailRespons31","ShareProduct","average","StarRating","userrating","handleOpenReviewBox","total_reviews","toFixed","handleIncrease","prev","toggleAddressModal","isOpen","min","disabled","handleDecrease","max","_item$sku_price","_item$sku_price2","_item$sku_price3","handleColorClick","color_image","handleBuyNowProduct","_productDetailRespons10","estimated_delivery_time","fikfisCommitment","availableOffers","_Fragment","ProductListCard","image","discountPrice","price","save","coupenCode","coupen","deliveryTime","deliverytime","freeDelivery","freedelivery","bestSeller","bestseller","time","discountLabel","Offerprice","onAddToCart","cartQuantity","onIncrement","onDecrement","onProductClick","onProductImageClick","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","forcePage","similar_products","cart_quantity","ref","style","string","replace","char","toUpperCase","LinearProgressWithLabel","review_count","toggleReviewForm","breakClassName","ev","handleReviewPageChange","profile_image","rate_name","review_text","review_image","onSubmit","preventDefault","uploadedImages","validate","newErrors","isValid","trim","test","_productDetailRespons8","image_id","addReviewProductData","_productDetailRespons9","for","placeholder","onChange","cols","accept","handleImageUpload","file","files","startsWith","updatedLoading","addReviewProductImageData","then","updatedImage","updatedImageData","console","error","catch","onRatingChange","newRating","Button","varient","space","async","productURL","productId","navigator","url","clipboard","writeText","alert","ShareBlogs","blogURL","blogId"],"sourceRoot":""}