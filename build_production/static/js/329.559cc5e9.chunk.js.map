{"version":3,"file":"static/js/329.559cc5e9.chunk.js","mappings":"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","sources":["components/ProductListCard/ProductListCard.jsx","components/StarRating/StarRating.jsx","pages/Search/Search.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport StarRating from '../StarRating/StarRating';\r\nimport './ProductListCard.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProductListCard = ({ \r\n  id,\r\n  image, \r\n  name, \r\n  userrating, \r\n  discountPrice, \r\n  originalPrice, \r\n  discountLabel, \r\n  time,\r\n  save,\r\n  coupenCode,\r\n  deliveryTime,\r\n  freeDelivery,\r\n  bestSeller,\r\n  wishlistStatus,\r\n  sku_id,\r\n  onAddToCart,\r\n  onProductClick,\r\n  onIncrement,\r\n  onDecrement,\r\n  cartQuantity,\r\n  offer,\r\n  onProductImageClick,\r\n  handleWishlistToggle,\r\n}) => {\r\n  const [whistListBox, setWhistListBox] = useState({\r\n    whistlist: \"/images/product/whistlist.svg\",\r\n    whistlistFill: \"/images/product/whistlist-fill.svg\",\r\n  });\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  // const handleIncrement = () => setQuantity((prevQuantity) => prevQuantity + 1);\r\n  // const handleDecrement = () => setQuantity((prevQuantity) => Math.max(prevQuantity - 1, 0));\r\n\r\n  return (\r\n    <div className='productBoxes' key={id}>\r\n      <div className=\"whislistBox\">\r\n        <div className=\"wishlist-btn\" onClick={handleWishlistToggle}>\r\n          {wishlistStatus?.toLowerCase() === 'yes' ? (\r\n            <img\r\n              src={whistListBox.whistlistFill}\r\n              alt=\"Whistlist Product\"\r\n            />\r\n          ) : (\r\n            <img src={whistListBox.whistlist} alt=\"Whistlist Product\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {image && <img src={image} alt={name} onClick={onProductImageClick}  />}\r\n      {/* {image && <img src={image} alt={name} onClick={onProductClick}  />} */}\r\n      {name && <h4>{name.length > 50 ? `${name.slice(0, 50)}...` : name}</h4>}\r\n      <div className='priceList'>\r\n        {discountPrice && <p className='discount'>£ {discountPrice}</p>}\r\n        {originalPrice && <p className='original'>£ {originalPrice}</p>}\r\n      </div>\r\n      <div className='ratingAndCartWrap'>\r\n        {userrating && <StarRating userrating={userrating} />}\r\n        {offer ? null : (\r\n            cartQuantity === 0 ? (\r\n            // Show Add Button if quantity is 0\r\n            <button type=\"button\" onClick={() => onAddToCart(sku_id)} \r\n              // disabled={user.length === 0 ? true : false} \r\n              title={user.length === 0 ? 'Please login to add items to cart.' : 'Add to cart'}\r\n              >Add</button>\r\n          ) : (\r\n            <button type=\"button\" onClick={() => onProductClick()} \r\n              // disabled={user.length === 0 ? true : false} \r\n              title={user.length === 0 ? 'Please login to add items to cart.' : 'Add to cart'}\r\n              >Add</button>\r\n            // Show Plus/Minus Buttons if quantity is greater than 0\r\n            // <div className=\"quantityButtons\">\r\n            //   <button type=\"button\"  onClick={() => onIncrement(sku_id)}>+</button>\r\n            //   <span>{cartQuantity}</span>\r\n            //   <button type=\"button\" onClick={() => onDecrement(sku_id)}>-</button>\r\n            // </div>\r\n          )\r\n        )}\r\n      </div>\r\n      \r\n      {(discountLabel || time || save || coupenCode) && (\r\n        <div className={`offerList ${save ? 'saveMode' : ''}`}>\r\n          {discountLabel && <span>{discountLabel}</span>}\r\n          {time && <h6>{time}</h6>}\r\n          {coupenCode && <p>{coupenCode}</p>}\r\n        </div>\r\n      )}\r\n\r\n      {deliveryTime && <p>{deliveryTime}</p>}\r\n      {freeDelivery && <p>{freeDelivery}</p>}\r\n      {bestSeller && <div className=\"ribbon\">#Best Seller</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListCard;\r\n","import React, { useState } from 'react';\r\nimport './StarRating.css';\r\n\r\nconst StarRating = ({ userrating = 0, onRatingChange }) => {\r\n    const [rating, setRating] = useState(userrating ? userrating : 0);\r\n    // const [hover, setHover] = useState(null);\r\n    // const [totalStars, setTotalStars] = useState(5);\r\n    const [totalStars] = useState(5);\r\n    const handleRatingSelect = (currentRating) => {\r\n        setRating(currentRating); // Update local rating state\r\n        if (onRatingChange) {\r\n            onRatingChange(currentRating); // Notify parent of the change\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"starRating\">\r\n            {[...Array(totalStars)].map((star, index) => {\r\n                const currentRating = index + 1;\r\n                return (\r\n                    <label key={index}>\r\n                        <input\r\n                            key={star}\r\n                            type=\"radio\"\r\n                            name=\"rating\"\r\n                            value={currentRating}\r\n                            onChange={() => handleRatingSelect(currentRating)}\r\n                            userrating = {rating}\r\n                        />\r\n                        <span\r\n                            className=\"star\"\r\n                            style={{\r\n                                color:\r\n                                    // currentRating <= (hover || rating) ? \"#ffc107\" : \"#e4e5e9\",\r\n                                    currentRating <= rating ? \"#ffc107\" : \"#e4e5e9\",\r\n                            }}\r\n                        // onMouseEnter={() => setHover(currentRating)}\r\n                        // onMouseLeave={() => setHover(null)}\r\n                        >\r\n                            &#9733;\r\n                        </span>\r\n                    </label>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StarRating","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ProductListCard from '../../components/ProductListCard/ProductListCard';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { addProductOnWhistList, addToCartData, deleteSingleWhistListData, searchProductData, viewItemsInCartData } from '../../store/slice/api_integration';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { DEFAULT_OPTIONS } from '../../utils/Constants';\r\nimport './Search.css';\r\nimport { setViewCartItems } from '../../store/slice/cartSlice';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { toggleModal } from '../../store/slice/modalSlice';\r\n\r\nconst Search = () => {\r\n    const { search, total = 0 } = useSelector(state => state.product);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const [page, setPage] = useState(0);  // Default page 0 (first page)\r\n    const [itemsPerPage, setItemsPerPage] = useState(50);\r\n    const [triggerSkuId, setTriggerSkuId] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { user } = useSelector((state) => state.user);\r\n\r\n    // Handle product card click\r\n    const handleProductClick = (item) => {\r\n        if(user.length === 0) {\r\n            dispatch(toggleModal(true));\r\n        } else {\r\n            navigate(`/product/${item.product_id}`, { state: { product: item } });\r\n        }\r\n    };\r\n\r\n    \r\n    const handleProcuctImageClick = (item) => {\r\n        navigate(`/product/${item.product_id}`, { state: { product: item } });\r\n    }\r\n    \r\n    // Generate dropdown options based on total results\r\n    const itemsPerPageOptions = DEFAULT_OPTIONS\r\n                                    .filter(option => option <= total);     \r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        // Read query and page number from the URL search params\r\n        const searchParams = new URLSearchParams(location.search);\r\n        const query = searchParams.get('query');\r\n        const pageParam = parseInt(searchParams.get('page'), 10) || 1; // Default to page 1 if not provided\r\n\r\n        // Update local page state to match the page in the URL\r\n        setPage(pageParam - 1); // `react-paginate` uses 0-based indexing\r\n\r\n        // If there is a query, fetch data from API\r\n        if (query) {\r\n            const offset = (pageParam - 1) * itemsPerPage; // Calculate the correct offset\r\n            const responseObj = {\r\n                keyword: query,\r\n                offset,\r\n                limit: itemsPerPage,\r\n            };\r\n            dispatch(searchProductData(responseObj)).finally(() => {\r\n                setLoading(false);\r\n            }); // Dispatch API call\r\n        }\r\n    }, [location.search, itemsPerPage, dispatch]);  // Trigger this effect when the URL's query or page changes\r\n    \r\n    const handleItemsPerPageChange = (e) => {\r\n        setItemsPerPage(parseInt(e.target.value, 10));\r\n        setPage(0); // Reset to the first page\r\n        const searchParams = new URLSearchParams(location.search);\r\n        searchParams.set('page', 1);\r\n        navigate(`/search?${searchParams.toString()}`);\r\n    };\r\n\r\n    // Handle page change event (when user clicks next/previous)\r\n    const handlePageChange = (data) => {\r\n        const { selected } = data;\r\n        const searchParams = new URLSearchParams(location.search);\r\n        searchParams.set('page', selected + 1); // `react-paginate` uses 0-based index, we set to 1-based index in URL\r\n        navigate(`/search?${searchParams.toString()}`); // Update the URL with the new page\r\n    };\r\n\r\n    // Calculate total pages based on total results\r\n    const totalPages = Math.max(Math.ceil(total / itemsPerPage), 1);\r\n    const validPage = Math.min(page, totalPages - 1);\r\n\r\n    const handleAddToCartClick = (sku_id) => {\r\n        setTriggerSkuId(sku_id);\r\n        const responseObj = {\r\n          sku_id,\r\n          type: \"increase\",\r\n        };\r\n        dispatch(addToCartData(responseObj)).finally(() => {\r\n          fetchUpdatedProductList();\r\n        })\r\n    };\r\n    const handleIncrement = (sku_id) => {\r\n      const responseObj = { sku_id, type: \"increase\" };\r\n      dispatch(addToCartData(responseObj)).finally(() => {\r\n        fetchUpdatedProductList();\r\n      });\r\n    };\r\n    \r\n    const handleDecrement = (sku_id) => {\r\n      const responseObj = { sku_id, type: \"decrease\" };\r\n      dispatch(addToCartData(responseObj)).finally(() => {\r\n        fetchUpdatedProductList();\r\n      });\r\n    };\r\n\r\n    const fetchUpdatedProductList = () => {\r\n        setLoading(true);\r\n        const searchParams = new URLSearchParams(location.search);\r\n        const query = searchParams.get('query');\r\n        const pageParam = parseInt(searchParams.get('page'), 10) || 1; // Default to page 1 if not provided\r\n\r\n        // Update local page state to match the page in the URL\r\n        setPage(pageParam - 1); // `react-paginate` uses 0-based indexing\r\n\r\n        // If there is a query, fetch data from API\r\n        if (query) {\r\n            const offset = (pageParam - 1) * itemsPerPage; // Calculate the correct offset\r\n            const responseObj = {\r\n                keyword: query,\r\n                offset,\r\n                limit: itemsPerPage,\r\n            };\r\n            dispatch(searchProductData(responseObj)).finally(() => {\r\n                setLoading(false);\r\n            })\r\n        }\r\n            dispatch(viewItemsInCartData());\r\n            dispatch(setViewCartItems(null));\r\n    };\r\n    \r\n    const handleWishlistToggle = (productData) => {\r\n        if(user.length === 0) {\r\n          dispatch(toggleModal(true));\r\n          // setWishlistLoading(false);\r\n          return;\r\n        }\r\n    \r\n        const responseObj = { sku_id: Number(productData?.sku_id) }\r\n        if(productData?.wishlistStatus?.toLowerCase() === 'no') {\r\n          dispatch(addProductOnWhistList(responseObj)).finally(() => {\r\n            fetchUpdatedProductList();\r\n            // setWishlistLoading(false);\r\n          })\r\n        } else {\r\n            dispatch(deleteSingleWhistListData(responseObj)).finally(() => {\r\n              fetchUpdatedProductList();\r\n              // setWishlistLoading(false);\r\n            })\r\n        }\r\n      }\r\n      \r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <div className=\"loadingContainer\">\r\n                    <CircularProgress />\r\n                </div>\r\n            ) : (\r\n                <div className='searchProduct'>\r\n                    <div className='searchedItemsHeader'>\r\n                        <h2>Your Searched Items</h2>\r\n                    </div>\r\n                    <div className=\"productList\">\r\n                        {search && search.length > 0 ? (\r\n                            search.map((item, index) => (\r\n                                <div key={index}>\r\n                                    <ProductListCard\r\n                                        id={item.id}\r\n                                        image={item.imageUrl || \"/images/no-product-available.png\"}\r\n                                        name={item.name || \"\"}\r\n                                        userrating={item.rating || \"0.0\"}\r\n                                        discountPrice={item.discountedPrice || \"\"}\r\n                                        originalPrice={item.price || \"\"}\r\n                                        save={item.save || \"\"}\r\n                                        coupenCode={item.coupen || \"\"}\r\n                                        deliveryTime={item.deliverytime || \"\"}\r\n                                        freeDelivery={item.freedelivery || \"\"}\r\n                                        bestSeller={item.bestseller || \"\"}\r\n                                        time={item.time || \"\"}\r\n                                        discountLabel={item.discountlabel || \"\"}\r\n                                        wishlistStatus={item.wishlistStatus || 'no'}\r\n                                        sku_id={item.sku_id} // Pass SKU ID for Add to Cart\r\n                                        // onAddToCart={() => handleAddToCartClick(item.sku_id)}\r\n                                        onAddToCart={() => handleProductClick(item)}\r\n                                        cartQuantity={Number(item.cartQuantity)}\r\n                                        onIncrement={handleIncrement}\r\n                                        onDecrement={handleDecrement}\r\n                                        onProductClick={() => handleProductClick(item)}\r\n                                        onProductImageClick={() => handleProcuctImageClick(item)}\r\n                                        handleWishlistToggle={() => handleWishlistToggle(item)}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        ) : (\r\n                            <div className='noProductBoxes'>\r\n                                <svg width=\"184\" height=\"152\" viewBox=\"0 0 184 152\" xmlns=\"http://www.w3.org/2000/svg\"><title>No data</title><g fill=\"none\" fillRule=\"evenodd\"><g transform=\"translate(24 31.67)\"><ellipse fillOpacity=\".8\" fill=\"#F5F5F7\" cx=\"67.797\" cy=\"106.89\" rx=\"67.797\" ry=\"12.668\"></ellipse><path d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\" fill=\"#AEB8C2\"></path><path d=\"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\" fill=\"url(#linearGradient-1)\" transform=\"translate(13.56)\"></path><path d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\" fill=\"#F5F5F7\"></path><path d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\" fill=\"#DCE0E6\"></path></g><path d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\" fill=\"#DCE0E6\"></path><g transform=\"translate(149.65 15.383)\" fill=\"#FFF\"><ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\"></ellipse><path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\"></path></g></g></svg>\r\n                                <p className=\"noProductAvailable\">No product available</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                        <div className='paginationBox'>\r\n                            {/* <div className=\"itemsPerPageDropdown\">\r\n                                <label>Items per page: </label>\r\n                                <select value={itemsPerPage} onChange={handleItemsPerPageChange}>\r\n                                    {itemsPerPageOptions.map(option => (\r\n                                        <option key={option} value={option}>\r\n                                            {option}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div> */}\r\n                            {/* Pagination component */}\r\n                            <ReactPaginate\r\n                                previousLabel={\"Previous\"}\r\n                                nextLabel={\"Next\"}\r\n                                breakLabel={\"...\"}\r\n                                breakClassName={\"break-me\"}\r\n                                pageCount={totalPages}\r\n                                marginPagesDisplayed={2}\r\n                                pageRangeDisplayed={3}\r\n                                onPageChange={(ev) => handlePageChange(ev)}\r\n                                containerClassName={\"pagination\"}\r\n                                activeClassName={\"active\"}\r\n                                forcePage={validPage}  // Sync current page with URL\r\n                                disabled={total === 0} \r\n                            />\r\n                        </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n"],"names":["_ref","id","image","name","userrating","discountPrice","originalPrice","discountLabel","time","save","coupenCode","deliveryTime","freeDelivery","bestSeller","wishlistStatus","sku_id","onAddToCart","onProductClick","onIncrement","onDecrement","cartQuantity","offer","onProductImageClick","handleWishlistToggle","whistListBox","setWhistListBox","useState","whistlist","whistlistFill","user","useSelector","state","_jsxs","className","children","_jsx","onClick","toLowerCase","src","alt","length","slice","StarRating","type","title","onRatingChange","rating","setRating","totalStars","Array","map","star","index","currentRating","value","onChange","handleRatingSelect","style","color","Search","search","total","product","navigate","useNavigate","dispatch","useDispatch","location","useLocation","page","setPage","itemsPerPage","setItemsPerPage","triggerSkuId","setTriggerSkuId","loading","setLoading","handleProductClick","item","toggleModal","product_id","DEFAULT_OPTIONS","filter","option","useEffect","searchParams","URLSearchParams","query","get","pageParam","parseInt","responseObj","keyword","offset","limit","searchProductData","finally","totalPages","Math","max","ceil","validPage","min","handleIncrement","addToCartData","fetchUpdatedProductList","handleDecrement","viewItemsInCartData","setViewCartItems","_Fragment","CircularProgress","ProductListCard","imageUrl","discountedPrice","price","coupen","deliverytime","freedelivery","bestseller","discountlabel","Number","handleProcuctImageClick","productData","_productData$wishlist","addProductOnWhistList","deleteSingleWhistListData","width","height","viewBox","xmlns","fill","fillRule","transform","fillOpacity","cx","cy","rx","ry","d","ReactPaginate","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","ev","data","selected","set","toString","handlePageChange","containerClassName","activeClassName","forcePage","disabled"],"sourceRoot":""}