{"version":3,"file":"static/js/601.70f0b120.chunk.js","mappings":"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","sources":["components/BlogCard/BlogCard.jsx","pages/Blog/Blog.jsx","utils/FormatDateTime.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Remove.js"],"sourcesContent":["import React from 'react'\r\nimport './BlogCard.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { formatDateTimeProduct } from '../../utils/FormatDateTime';\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst BlogCard = ({ card }) => {\r\n    const navigate = useNavigate();\r\n    const currentUrl = window.location.href;\r\n    const truncateText = (text, maxLength = 43) => {\r\n        return text.length > maxLength ? text.slice(0, maxLength) + \"...\" : text;\r\n    };\r\n    return (\r\n        <>\r\n            {\r\n                card?.map((data, index) => (\r\n                    <div className='blogCard' key={index} onClick={() => navigate(`/blog/${data.id}`)}>\r\n                        <Helmet>\r\n                            <title>{'FikFis Blog | Trends, Tips & Shopping Guides'}</title>\r\n                            <meta name=\"description\" content={'Stay updated with the latest trends, shopping tips, and lifestyle guides on the FikFis Blog. Explore expert insights, fashion updates, and more!'} />\r\n                            {data && data.length > 0 && <meta name=\"keywords\" content={data.blog_title} />}\r\n                            {/* <!-- Open Graph / Facebook --> */}\r\n                            <meta property=\"og:title\" content={'FikFis Blog | Trends, Tips & Shopping Guides'} />\r\n                            <meta property=\"og:description\" content={'Stay updated with the latest trends, shopping tips, and lifestyle guides on the FikFis Blog. Explore expert insights, fashion updates, and more!'} />\r\n                            {data && data.length > 0 && <meta property=\"og:image\" content={data.blog_image} />}\r\n                            {/* <meta property=\"og:image\" content={ '/images/icons/LOGO1.png'} /> */}\r\n                            <meta property=\"og:url\" content={currentUrl} />\r\n                            <meta property=\"og:type\" content=\"article\" />\r\n                            {/* <!-- Twitter --> */}\r\n                            <meta property=\"twitter:card\" content=\"article\" />\r\n                            <meta property=\"twitter:url\" content={currentUrl} />\r\n                            <meta property=\"twitter:title\" content={'FikFis Blog | Trends, Tips & Shopping Guides'} />\r\n                            <meta property=\"twitter:description\" content={'Stay updated with the latest trends, shopping tips, and lifestyle guides on the FikFis Blog. Explore expert insights, fashion updates, and more!'} />\r\n                            {data && data.length > 0 && <meta property=\"twitter:image\" content={data.blog_image} />}\r\n                        </Helmet>\r\n                        <img src={data.blog_image} alt={data.blog_title} />\r\n                        <div className=\"date\">{formatDateTimeProduct(data.created_at).formattedDate}</div>\r\n                        <h3>{truncateText(data.blog_title)}</h3>\r\n                        <p className='description' dangerouslySetInnerHTML={{__html:data.blog_description}} />\r\n                        <p>Category: <span>{data.parent_category_name}</span></p>\r\n                        <p>Sub-category: <span>{data.sub_category_name}</span></p>\r\n                        <div className='blogFooter'>\r\n                            <p>By <strong>{data.author}</strong></p>\r\n                            <Link to={`/blog/${data.id}`}>Read More <span><img src=\"/images/blogs/read-more.svg\" alt=\"Read More\" /></span></Link>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogCard","import React, { useEffect, useState } from 'react';\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllBlogs, getAllBlogsCategory, getBlogsByCategory } from '../../store/slice/api_integration';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport './Blog.css';\r\nimport BlogCard from '../../components/BlogCard/BlogCard';\r\n\r\nconst Blog = () => {\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const { blogList, blogCategoryList } = useSelector(state => state.user);\r\n    const [categories, setCategories] = useState([]);\r\n    const [parentCategoryName, setParentCategoryName] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setParentCategoryName(\"\");\r\n        dispatch(getAllBlogsCategory())\r\n        dispatch(getAllBlogs()).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (blogCategoryList?.length) {\r\n            setCategories(blogCategoryList);\r\n        }\r\n    }, [blogCategoryList]);\r\n    \r\n    const handleBlogChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const currentUrl = window.location.href;\r\n    const schemaMarkup = {\r\n        \"@context\": \"https://schema.org\",\r\n        \"@type\": \"BlogPosting\",\r\n        \"mainEntityOfPage\": {\r\n          \"@type\": \"WebPage\",\r\n          \"@id\": \"https://fikfis.co.uk/blog\"\r\n        },\r\n        \"headline\": \"FikFis Blog | Trends, Tips & Shopping Guides\",\r\n        \"description\": \"Stay updated with the latest trends, shopping tips, and lifestyle guides on the FikFis Blog. Explore expert insights, fashion updates, and more!\",\r\n        \"image\": \"https://fikfis.co.uk/images/icons/LOGO1.png\",  \r\n        \"author\": {\r\n          \"@type\": \"Organization\",\r\n          \"name\": \"FikFis LTD\"\r\n        },  \r\n        \"publisher\": {\r\n          \"@type\": \"Organization\",\r\n          \"name\": \"\",\r\n          \"logo\": {\r\n            \"@type\": \"ImageObject\",\r\n            \"url\": \"2025-03-06\"\r\n          }\r\n        },\r\n        \"datePublished\": \"\"\r\n    }\r\n\r\n    const fetchAllBlogs = () => {\r\n        dispatch(getAllBlogs());\r\n        setParentCategoryName(\"\");\r\n    }\r\n\r\n    const getBlogByCategory = (category_id, category_name, subcategory_id) => {\r\n        console.log(\"category_name\", category_name);\r\n        setParentCategoryName(category_name);\r\n        // Move the clicked parent category to the top\r\n        setCategories((prevCategories) => {\r\n            const newCategories = [...prevCategories]; // Create a new array\r\n            const index = newCategories.findIndex(cat => cat.category_id === category_id);\r\n            if (index !== -1) {\r\n                const [selectedCategory] = newCategories.splice(index, 1);\r\n                return [selectedCategory, ...newCategories]; // Return reordered array\r\n            }\r\n            return newCategories;\r\n        });\r\n        \r\n        const payload = { category_id: category_id };\r\n        dispatch(getBlogsByCategory(payload)).finally(() => {\r\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n        });\r\n    };\r\n  return (\r\n    <div className='Blogs'>\r\n        {/* SEO Meta Tags */}\r\n        <Helmet>\r\n            {blogList && blogList.length > 0 && <title>{blogList[0].blog_title}</title>}\r\n            {blogList && blogList.length > 0 && <meta name=\"description\" content={blogList[0].blog_description.replace(/<\\/?[^>]+(>|$)/g, \"\")} />}\r\n            {blogList && blogList.length > 0 && <meta name=\"keywords\" content={blogList[0].blog_title} />}\r\n            {/* <!-- Open Graph / Facebook --> */}\r\n            {blogList && blogList.length > 0 && <meta property=\"og:title\" content={blogList[0].blog_title} />}\r\n            {blogList && blogList.length > 0 && <meta property=\"og:description\" content={blogList[0].blog_description.replace(/<\\/?[^>]+(>|$)/g, \"\")} />}\r\n            {blogList && blogList.length > 0 && <meta property=\"og:image\" content={blogList[0].blog_image} />}\r\n            {/* <meta property=\"og:image\" content={ '/images/icons/LOGO1.png'} /> */}\r\n            <meta property=\"og:url\" content={currentUrl} />\r\n            <meta property=\"og:type\" content=\"article\" />\r\n            {/* <!-- Twitter --> */}\r\n            <meta property=\"twitter:card\" content=\"article\" />\r\n            <meta property=\"twitter:url\" content={currentUrl} />\r\n            {blogList && blogList.length > 0 && <meta property=\"twitter:title\" content={blogList[0].blog_title} />}\r\n            {blogList && blogList.length > 0 && <meta property=\"twitter:description\" content={blogList[0].blog_description.replace(/<\\/?[^>]+(>|$)/g, \"\")} />}\r\n            {blogList && blogList.length > 0 && <meta property=\"twitter:image\" content={blogList[0].blog_image} />}\r\n            {/* <meta property=\"twitter:image\" content={ '/images/icons/LOGO1.png'} /> */}\r\n            <script type=\"application/ld+json\">\r\n                {JSON.stringify(schemaMarkup)}\r\n            </script>\r\n        </Helmet>\r\n        {loading ? (\r\n            <div className=\"loadingContainer\">\r\n                <CircularProgress />\r\n            </div>\r\n        ) : (\r\n            <>\r\n                <div className=\"blogsHeader\">\r\n                    <h2> {parentCategoryName ? `Blogs | ${parentCategoryName}` : 'All Blogs'}</h2>\r\n                    {parentCategoryName ? <div onClick={() => fetchAllBlogs()} className='allBlogs'>All Blogs</div> : \"\"}\r\n                </div>\r\n                <div className=\"blogsList\">\r\n                    <div className=\"leftBlogContent\">\r\n                        <BlogCard card={blogList} />\r\n                    </div>\r\n                    <div className=\"rightBlogContent\">\r\n                        <div className=\"blogCategory\">\r\n                            <h4>Categories</h4>\r\n                            <div className=\"blogCategoryList\">\r\n                                {categories?.map((category) => (\r\n                                    <Accordion \r\n                                        key={category.category_id}\r\n                                        expanded={expanded === category.category_id}\r\n                                        onChange={handleBlogChange(category.category_id)}\r\n                                    >\r\n                                        <AccordionSummary\r\n                                            expandIcon={expanded === category.category_id ? <RemoveIcon /> : <AddIcon />}\r\n                                            aria-controls={`panel-${category.category_id}-content`}\r\n                                            id={`panel-${category.category_id}-header`}\r\n                                        >\r\n                                            {category.category_name}\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                            <ul>\r\n                                                {category.children && category.children.length > 0 ? (\r\n                                                    JSON.parse(category.children).map((sub) => (\r\n                                                        <li key={sub.id}>\r\n                                                            <a \r\n                                                                onClick={() => getBlogByCategory(category.category_id, category.category_name, sub.id)}\r\n                                                            >\r\n                                                                {sub.category_name}\r\n                                                            </a>\r\n                                                        </li>\r\n                                                    ))\r\n                                                ) : (\r\n                                                    <li>No subcategory under {category.category_name} is available</li>\r\n                                                )}\r\n                                            </ul>\r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog","export const FormatDateTime = (dateTime) => {\r\n    const date = new Date(dateTime);\r\n    const formattedDate = date.toLocaleDateString(); // Format as MM/DD/YYYY or DD/MM/YYYY based on locale\r\n    const formattedTime = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); // Format as HH:MM\r\n    return `${formattedDate} ${formattedTime}`;\r\n};\r\n\r\nexport const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate();\r\n    const month = date.toLocaleString('default', { month: 'short' });\r\n  \r\n    // Adding suffixes for the day\r\n    const daySuffix =\r\n      day === 1 || day === 21 || day === 31 ? \"st\" :\r\n      day === 2 || day === 22 ? \"nd\" :\r\n      day === 3 || day === 23 ? \"rd\" : \"th\";\r\n  \r\n    return `${day}${daySuffix} ${month}`;\r\n  };\r\n\r\n  export const formatDateTimeProduct = (dateString) => {\r\n    if (!dateString) return \"Invalid Date\";\r\n  \r\n    // Check if the input is a datetime (contains space)\r\n    const isDateTime = dateString.includes(\" \");\r\n  \r\n    let parsedDate;\r\n  \r\n    if (isDateTime) {\r\n      // If datetime, split the date and time, then parse both parts\r\n      const [datePart, timePart] = dateString.split(\" \");\r\n      const [year, month, day] = datePart.split(\"-\").map(Number);\r\n      const [hour, minute] = timePart.split(\":\").map(Number);\r\n  \r\n      // Create a new Date object from the datetime components\r\n      parsedDate = new Date(year, month - 1, day, hour, minute); // Month is 0-indexed\r\n    } else {\r\n      // If only date, parse the date part only\r\n      const [day, month, year] = dateString.split(\"-\").map(Number);\r\n      parsedDate = new Date(year, month - 1, day); // Month is 0-indexed\r\n    }\r\n  \r\n    // Check if the parsed date is valid\r\n    if (isNaN(parsedDate)) return \"Invalid Date\";\r\n  \r\n    const weekDay = parsedDate.toLocaleString(\"default\", { weekday: \"long\" });\r\n    const shortMonth = parsedDate.toLocaleString(\"default\", { month: \"short\" });\r\n    const fullYear = parsedDate.getFullYear();\r\n  \r\n    const date = parsedDate.getDate();\r\n    let hour = parsedDate.getHours();\r\n  \r\n    // Determine AM or PM and adjust hour for 12-hour format\r\n    const period = hour >= 12 ? \"PM\" : \"AM\";\r\n    hour = hour % 12 || 12; // Convert 0 to 12 for 12-hour format\r\n    hour = hour.toString().padStart(2, \"0\");\r\n  \r\n    const minute = parsedDate.getMinutes().toString().padStart(2, \"0\");\r\n  \r\n    // Adding suffixes for the day\r\n    const daySuffix =\r\n      date === 1 || date === 21 || date === 31\r\n        ? \"st\"\r\n        : date === 2 || date === 22\r\n        ? \"nd\"\r\n        : date === 3 || date === 23\r\n        ? \"rd\"\r\n        : \"th\";\r\n  \r\n    return {\r\n      formattedDate: `${parsedDate.getDate().toString().padStart(2, \"0\")}-${(parsedDate.getMonth() + 1)\r\n        .toString()\r\n        .padStart(2, \"0\")}-${parsedDate.getFullYear()}`,\r\n      fullDay: weekDay,\r\n      time: isDateTime ? `${hour}:${minute} ${period}` : null, // Only include time if it's a datetime\r\n      components: {\r\n        day: date,\r\n        month: shortMonth,\r\n        weekDay,\r\n        hour,\r\n        minute,\r\n        period,\r\n      },\r\n    };\r\n  };\r\n  \r\n\r\nexport const formatClasses = (date) => {\r\n  const currentDate = new Date();\r\n  const targetDate = new Date(date);\r\n\r\n  if (targetDate.toDateString() === currentDate.toDateString()) {\r\n    return \"order started\"; // Same day as current date\r\n  } else if (targetDate < currentDate) {\r\n    return \"order started done\"; // Date has passed\r\n  } else {\r\n    return \"order\"; // Future date\r\n  }\r\n};\r\n\r\nexport const formatDateTimeFormatProduct = (dateString) => {\r\n  if (!dateString) return \"Invalid Date\";\r\n\r\n  // Parse the input date string (YYYY-MM-DD)\r\n  const [year, month, day] = dateString.split(\"-\").map(Number);\r\n\r\n  // Create a new Date object from the parsed values\r\n  const parsedDate = new Date(year, month - 1, day); // Month is 0-indexed\r\n\r\n  // Check if the parsed date is valid\r\n  if (isNaN(parsedDate)) return \"Invalid Date\";\r\n\r\n  // Format the date to DD-MM-YYYY\r\n  const formattedDate = `${parsedDate.getDate().toString().padStart(2, '0')}-${(parsedDate.getMonth() + 1).toString().padStart(2, '0')}-${parsedDate.getFullYear()}`;\r\n\r\n  return formattedDate;\r\n};\r\n\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');"],"names":["_ref","card","navigate","useNavigate","currentUrl","window","location","href","truncateText","text","maxLength","arguments","length","undefined","slice","_jsx","_Fragment","children","map","data","index","_jsxs","className","onClick","id","Helmet","name","content","blog_title","property","blog_image","src","alt","formatDateTimeProduct","created_at","formattedDate","dangerouslySetInnerHTML","__html","blog_description","parent_category_name","sub_category_name","author","Link","to","Blog","dispatch","useDispatch","loading","setLoading","useState","expanded","setExpanded","blogList","blogCategoryList","useSelector","state","user","categories","setCategories","parentCategoryName","setParentCategoryName","useEffect","getAllBlogsCategory","getAllBlogs","finally","replace","type","JSON","stringify","CircularProgress","BlogCard","category","Accordion","category_id","onChange","panel","event","isExpanded","AccordionSummary","expandIcon","RemoveIcon","AddIcon","category_name","AccordionDetails","parse","sub","getBlogByCategory","console","log","prevCategories","newCategories","findIndex","cat","selectedCategory","splice","payload","getBlogsByCategory","scrollTo","top","behavior","FormatDateTime","dateTime","date","Date","toLocaleDateString","toLocaleTimeString","hour","minute","formatDate","dateString","day","getDate","toLocaleString","month","isDateTime","includes","parsedDate","datePart","timePart","split","year","Number","isNaN","weekDay","weekday","shortMonth","getFullYear","getHours","period","toString","padStart","getMinutes","getMonth","fullDay","time","components","formatDateTimeFormatProduct","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}