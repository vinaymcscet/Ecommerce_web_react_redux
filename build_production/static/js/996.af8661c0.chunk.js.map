{"version":3,"file":"static/js/996.af8661c0.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","pages/BlogDetail/BlogDetail.jsx","utils/FormatDateTime.js","utils/ShareProduct.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Remove.js"],"sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = ({type, value, varient, space, handleClick}) => {\r\n  return (\r\n    <div>\r\n        <button type={type} className={`${varient} ${space}`} onClick={handleClick}>{value}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Button","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addBlogReviewData, getAllBlogsCategory, getBlogDetailData } from \"../../store/slice/api_integration\";\r\nimport \"./BlogDetail.css\";\r\nimport { FormatDateTime, formatDateTimeProduct } from \"../../utils/FormatDateTime\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { ShareBlogs } from \"../../utils/ShareProduct\";\r\n\r\n// import Button from '@mui/material/Button';\r\n\r\nconst BlogDetail = () => {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const { blogCategoryList, blogDetail } = useSelector(state => state.user);\r\n\r\n  const { id } = useParams();\r\n  // const blog = BlogsList.find((blog) => blog.id === parseInt(id));\r\n  // if (!blog) return <div>Blog not found</div>;\r\n  \r\n  useEffect(() => {\r\n    setLoading(true)\r\n    dispatch(getAllBlogsCategory());\r\n    dispatch(getBlogDetailData(id)).finally(() => {\r\n        setLoading(false);\r\n    });\r\n  }, [])\r\n\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    review: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    review: \"\",\r\n  });\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    let isValid = true;\r\n\r\n    if (!formData.fullName) {\r\n      newErrors.fullName = \"Full Name is required.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.email) {\r\n      newErrors.email = \"Email is required.\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = \"Email is invalid.\";\r\n      isValid = false;\r\n    }\r\n\r\n    if (!formData.review) {\r\n      newErrors.review = \"Review is required.\";\r\n      isValid = false;\r\n    } else if (formData.review.length < 10) {\r\n      newErrors.review = \"Review must be at least 10 characters long.\";\r\n      isValid = false;\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      const responseObj = {\r\n        blog_id: id,\r\n        full_name: formData.fullName, \r\n        review_text: formData.review,\r\n        reviewer_email: formData.email\r\n      }\r\n      dispatch(addBlogReviewData(responseObj)).finally(() => {\r\n        dispatch(getBlogDetailData(id));\r\n      })\r\n      setFormData({\r\n        fullName: \"\",\r\n        email: \"\",\r\n        review: \"\",\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleBlogChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  \r\n  const currentUrl = window.location.href;  \r\n  const schemaMarkup = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"BlogPosting\",\r\n    \"mainEntityOfPage\": {\r\n      \"@type\": \"WebPage\",\r\n      \"@id\": \"https://fikfis.co.uk/blog\"\r\n    },\r\n    \"headline\": \"FikFis Blog | Trends, Tips & Shopping Guides\",\r\n    \"description\": \"Stay updated with the latest trends, shopping tips, and lifestyle guides on the FikFis Blog. Explore expert insights, fashion updates, and more!\",\r\n    \"image\": \"https://fikfis.co.uk/images/icons/LOGO1.png\",  \r\n    \"author\": {\r\n      \"@type\": \"Organization\",\r\n      \"name\": \"FikFis LTD\"\r\n    },  \r\n    \"publisher\": {\r\n      \"@type\": \"Organization\",\r\n      \"name\": \"\",\r\n      \"logo\": {\r\n        \"@type\": \"ImageObject\",\r\n        \"url\": \"2025-03-06\"\r\n      }\r\n    },\r\n    \"datePublished\": \"\"\r\n  }\r\n  return (\r\n    <div className=\"Blogs detail\">\r\n      <Helmet>\r\n          {blogDetail && blogDetail.length > 0 && <title>{blogDetail[0].meta_title}</title>}\r\n          {blogDetail && blogDetail.length > 0 && <meta name=\"description\" content={blogDetail[0].meta_desc} />}\r\n          {blogDetail && blogDetail.length > 0 && <meta name=\"keywords\" content={blogDetail[0].meta_keywords} />}\r\n          {/* <!-- Open Graph / Facebook --> */}\r\n          {blogDetail && blogDetail.length > 0 && <meta property=\"og:title\" content={blogDetail[0].meta_title} />}\r\n          {blogDetail && blogDetail.length > 0 && <meta property=\"og:description\" content={blogDetail[0].meta_desc} />}\r\n          {blogDetail && blogDetail.length > 0 && <meta property=\"og:image\" content={blogDetail[0].blog_image} />}\r\n          {/* <meta property=\"og:image\" content={ '/images/icons/LOGO1.png'} /> */}\r\n          <meta property=\"og:url\" content={currentUrl} />\r\n          <meta property=\"og:type\" content=\"article\" />\r\n          {/* <!-- Twitter --> */}\r\n          <meta property=\"twitter:card\" content=\"article\" />\r\n          <meta property=\"twitter:url\" content={currentUrl} />\r\n          {blogDetail && blogDetail.length > 0 && <meta property=\"twitter:title\" content={blogDetail[0].meta_title} />}\r\n          {blogDetail && blogDetail.length > 0 && <meta property=\"twitter:description\" content={blogDetail[0].meta_desc} />}\r\n          {blogDetail && blogDetail.length > 0 && <meta property=\"twitter:image\" content={blogDetail[0].blog_image} />}\r\n          <script type=\"application/ld+json\">\r\n              {JSON.stringify(schemaMarkup)}\r\n          </script>\r\n      </Helmet>\r\n      {loading ? (\r\n          <div className=\"loadingContainer\">\r\n              <CircularProgress />\r\n          </div>\r\n      ) : (\r\n          <>\r\n            <div className=\"blogsHeader\">\r\n              <h2><img src=\"/images/icons/left-arrow.svg\" alt=\"Left Arrow\" /><Link to=\"/blog\">Blog</Link></h2>\r\n            </div>\r\n            <div className=\"blogContent\">\r\n              <div className=\"leftBlogContent\">\r\n              {blogDetail && blogDetail[0] ? (\r\n                <>\r\n                  <img src={blogDetail[0].blog_image} alt={blogDetail[0].blog_title} />\r\n                  <div className=\"blogHeaderWrapper\">\r\n                    <h4>{blogDetail[0].blog_title}</h4>\r\n                    <div className=\"shareItem\">\r\n                      <div \r\n                        className=\"icon\"\r\n                        onClick={() => ShareBlogs(id)}\r\n                      >\r\n                        <img\r\n                          src=\"/images/icons/share.svg\"\r\n                          alt=\"share Item\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <p className='description' dangerouslySetInnerHTML={{__html:blogDetail[0].blog_description}} />\r\n                  <h6>{blogDetail[0].slug}</h6>\r\n                  <p>Category: <span>{blogDetail[0].parent_category_name}</span></p>\r\n                  <p>Sub-category: <span>{blogDetail[0].category_name}</span></p>\r\n                  <div className=\"date\"><p>Posted at: </p> {formatDateTimeProduct(blogDetail[0].blog_created_at).formattedDate} {formatDateTimeProduct(blogDetail[0].blog_created_at).time}</div>\r\n                  {/* <div className=\"blogReviewForm\">\r\n                    <h4>Write Your Review</h4>\r\n                    <div className=\"reviewForm\">\r\n                      <form onSubmit={handleSubmit}>\r\n                        <div className=\"box\">\r\n                          <div className=\"form-control\">\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"fullName\"\r\n                              placeholder=\"Full Name\"\r\n                              value={formData.fullName}\r\n                              onChange={handleChange}\r\n                            />\r\n                            {errors.fullName && (\r\n                              <p className=\"error\">{errors.fullName}</p>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"form-control\">\r\n                            <input\r\n                              type=\"email\"\r\n                              name=\"email\"\r\n                              placeholder=\"Email\"\r\n                              value={formData.email}\r\n                              onChange={handleChange}\r\n                            />\r\n                            {errors.email && <p className=\"error\">{errors.email}</p>}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"box full\">\r\n                          <div className=\"form-control\">\r\n                            <textarea\r\n                              cols=\"10\"\r\n                              name=\"review\"\r\n                              placeholder=\"Write Your Review\"\r\n                              value={formData.review}\r\n                              onChange={handleChange}\r\n                            ></textarea>\r\n                            {errors.review && <p className=\"error\">{errors.review}</p>}\r\n                          </div>\r\n                        </div>\r\n                        <Button\r\n                          type={\"submit\"}\r\n                          value={\"submit\"}\r\n                          varient=\"explore review\"\r\n                          space=\"sp-10\"\r\n                        />\r\n                      </form>\r\n                    </div>\r\n                  </div> */}\r\n                  {/* <div className=\"commentLists\">\r\n                    {blogDetail[0]?.reviews &&\r\n                        JSON.parse(blogDetail[0]?.reviews).map((sub, index) => (\r\n                        <div className=\"commentItem\" key={index}>\r\n                          <div className=\"leftComment\">\r\n                            <img src={sub.reviewer_image} alt={sub.full_name} />\r\n                          </div>\r\n                          <div className=\"rightComment\">\r\n                            <div className=\"name\">{sub.full_name}</div>\r\n                            {/* <div className=\"name\">{sub.reviewer_email}</div> */}\r\n                            {/* <div className=\"commentDesc\">{sub.review_text}</div>\r\n                            <div className=\"commentDesc\">{FormatDateTime(sub.created_at)}</div>\r\n                          </div>\r\n                        </div>\r\n                    ))}\r\n                  </div> */}\r\n                </>\r\n              ) : (\r\n                <p>Loading blog details...</p>\r\n              )}\r\n              </div>\r\n              <div className=\"rightBlogContent\">\r\n                <div className=\"blogCategory\">\r\n                  <h4>Categories</h4>\r\n                  <div className=\"blogCategoryList\">\r\n                    {blogCategoryList?.map((category) => (\r\n                      <Accordion \r\n                        key={category.id}\r\n                        expanded={expanded === category.category_id}\r\n                        onChange={handleBlogChange(category.category_id)}\r\n                        >\r\n                        <AccordionSummary\r\n                          expandIcon={\r\n                            expanded === category.category_id ? <RemoveIcon /> : <AddIcon />\r\n                          }\r\n                          aria-controls={`panel-${category.category_id}-content`}\r\n                          id={`panel-${category.category_id}-header`}\r\n                        >\r\n                          {category.category_name}\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                          <ul>\r\n                          {category?.children &&\r\n                              JSON.parse(category?.children).map((sub) => (\r\n                              <li key={sub.category_id}>{sub.category_name}</li>\r\n                          ))}\r\n                          {!category?.children && \r\n                            <li>{`No subcategory under ${category?.category_name} is available`}</li>\r\n                          }\r\n                          </ul>\r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetail;\r\n","export const FormatDateTime = (dateTime) => {\r\n    const date = new Date(dateTime);\r\n    const formattedDate = date.toLocaleDateString(); // Format as MM/DD/YYYY or DD/MM/YYYY based on locale\r\n    const formattedTime = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); // Format as HH:MM\r\n    return `${formattedDate} ${formattedTime}`;\r\n};\r\n\r\nexport const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate();\r\n    const month = date.toLocaleString('default', { month: 'short' });\r\n  \r\n    // Adding suffixes for the day\r\n    const daySuffix =\r\n      day === 1 || day === 21 || day === 31 ? \"st\" :\r\n      day === 2 || day === 22 ? \"nd\" :\r\n      day === 3 || day === 23 ? \"rd\" : \"th\";\r\n  \r\n    return `${day}${daySuffix} ${month}`;\r\n  };\r\n\r\n  export const formatDateTimeProduct = (dateString) => {\r\n    if (!dateString) return \"Invalid Date\";\r\n  \r\n    // Check if the input is a datetime (contains space)\r\n    const isDateTime = dateString.includes(\" \");\r\n  \r\n    let parsedDate;\r\n  \r\n    if (isDateTime) {\r\n      // If datetime, split the date and time, then parse both parts\r\n      const [datePart, timePart] = dateString.split(\" \");\r\n      const [year, month, day] = datePart.split(\"-\").map(Number);\r\n      const [hour, minute] = timePart.split(\":\").map(Number);\r\n  \r\n      // Create a new Date object from the datetime components\r\n      parsedDate = new Date(year, month - 1, day, hour, minute); // Month is 0-indexed\r\n    } else {\r\n      // If only date, parse the date part only\r\n      const [day, month, year] = dateString.split(\"-\").map(Number);\r\n      parsedDate = new Date(year, month - 1, day); // Month is 0-indexed\r\n    }\r\n  \r\n    // Check if the parsed date is valid\r\n    if (isNaN(parsedDate)) return \"Invalid Date\";\r\n  \r\n    const weekDay = parsedDate.toLocaleString(\"default\", { weekday: \"long\" });\r\n    const shortMonth = parsedDate.toLocaleString(\"default\", { month: \"short\" });\r\n    const fullYear = parsedDate.getFullYear();\r\n  \r\n    const date = parsedDate.getDate();\r\n    let hour = parsedDate.getHours();\r\n  \r\n    // Determine AM or PM and adjust hour for 12-hour format\r\n    const period = hour >= 12 ? \"PM\" : \"AM\";\r\n    hour = hour % 12 || 12; // Convert 0 to 12 for 12-hour format\r\n    hour = hour.toString().padStart(2, \"0\");\r\n  \r\n    const minute = parsedDate.getMinutes().toString().padStart(2, \"0\");\r\n  \r\n    // Adding suffixes for the day\r\n    const daySuffix =\r\n      date === 1 || date === 21 || date === 31\r\n        ? \"st\"\r\n        : date === 2 || date === 22\r\n        ? \"nd\"\r\n        : date === 3 || date === 23\r\n        ? \"rd\"\r\n        : \"th\";\r\n  \r\n    return {\r\n      formattedDate: `${parsedDate.getDate().toString().padStart(2, \"0\")}-${(parsedDate.getMonth() + 1)\r\n        .toString()\r\n        .padStart(2, \"0\")}-${parsedDate.getFullYear()}`,\r\n      fullDay: weekDay,\r\n      time: isDateTime ? `${hour}:${minute} ${period}` : null, // Only include time if it's a datetime\r\n      components: {\r\n        day: date,\r\n        month: shortMonth,\r\n        weekDay,\r\n        hour,\r\n        minute,\r\n        period,\r\n      },\r\n    };\r\n  };\r\n  \r\n\r\nexport const formatClasses = (date) => {\r\n  const currentDate = new Date();\r\n  const targetDate = new Date(date);\r\n\r\n  if (targetDate.toDateString() === currentDate.toDateString()) {\r\n    return \"order started\"; // Same day as current date\r\n  } else if (targetDate < currentDate) {\r\n    return \"order started done\"; // Date has passed\r\n  } else {\r\n    return \"order\"; // Future date\r\n  }\r\n};\r\n\r\nexport const formatDateTimeFormatProduct = (dateString) => {\r\n  if (!dateString) return \"Invalid Date\";\r\n\r\n  // Parse the input date string (YYYY-MM-DD)\r\n  const [year, month, day] = dateString.split(\"-\").map(Number);\r\n\r\n  // Create a new Date object from the parsed values\r\n  const parsedDate = new Date(year, month - 1, day); // Month is 0-indexed\r\n\r\n  // Check if the parsed date is valid\r\n  if (isNaN(parsedDate)) return \"Invalid Date\";\r\n\r\n  // Format the date to DD-MM-YYYY\r\n  const formattedDate = `${parsedDate.getDate().toString().padStart(2, '0')}-${(parsedDate.getMonth() + 1).toString().padStart(2, '0')}-${parsedDate.getFullYear()}`;\r\n\r\n  return formattedDate;\r\n};\r\n\r\n","export const ShareProduct = async (productId) => {\r\n  const productURL = `${window.location.origin}/product/${productId}`;\r\n\r\n  if (navigator.share) {\r\n    try {\r\n      await navigator.share({\r\n        title: \"Check out this product!\",\r\n        url: productURL,\r\n      });\r\n    } catch (error) {\r\n      // console.error(\"Error sharing product:\", error);\r\n    }\r\n  } else {\r\n    navigator.clipboard.writeText(productURL);\r\n    alert(\"Link copied to clipboard!\");\r\n  }\r\n};\r\n\r\nexport const ShareBlogs = async (blogId) => {\r\n  const blogURL = `${window.location.origin}/blog/${blogId}`;\r\n\r\n  if (navigator.share) {\r\n    try {\r\n      await navigator.share({\r\n        title: \"Check out this blog!\",\r\n        url: blogURL,\r\n      });\r\n    } catch (error) {\r\n      // console.error(\"Error sharing blog:\", error);\r\n    }\r\n  } else {\r\n    navigator.clipboard.writeText(blogURL);\r\n    alert(\"Link copied to clipboard!\");\r\n  }\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14z\"\n}), 'Remove');"],"names":["_ref","type","value","varient","space","handleClick","_jsx","children","className","onClick","BlogDetail","dispatch","useDispatch","loading","setLoading","useState","blogCategoryList","blogDetail","useSelector","state","user","id","useParams","useEffect","getAllBlogsCategory","getBlogDetailData","finally","expanded","setExpanded","formData","setFormData","fullName","email","review","errors","setErrors","currentUrl","window","location","href","_jsxs","Helmet","length","meta_title","name","content","meta_desc","meta_keywords","property","blog_image","JSON","stringify","CircularProgress","_Fragment","src","alt","Link","to","blog_title","ShareBlogs","dangerouslySetInnerHTML","__html","blog_description","slug","parent_category_name","category_name","formatDateTimeProduct","blog_created_at","formattedDate","time","map","category","Accordion","category_id","onChange","panel","event","isExpanded","AccordionSummary","expandIcon","RemoveIcon","AddIcon","AccordionDetails","parse","sub","FormatDateTime","dateTime","date","Date","toLocaleDateString","toLocaleTimeString","hour","minute","formatDate","dateString","day","getDate","toLocaleString","month","isDateTime","includes","parsedDate","datePart","timePart","split","year","Number","isNaN","weekDay","weekday","shortMonth","getFullYear","getHours","period","toString","padStart","getMinutes","getMonth","fullDay","components","formatDateTimeFormatProduct","ShareProduct","async","productURL","origin","productId","navigator","share","title","url","error","clipboard","writeText","alert","blogURL","blogId","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}