{"version":3,"file":"static/js/723.c000e79a.chunk.js","mappings":"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","sources":["components/ProductListCard/ProductListCard.jsx","components/StarRating/StarRating.jsx","pages/Category/Category.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport StarRating from '../StarRating/StarRating';\r\nimport './ProductListCard.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProductListCard = ({ \r\n  id,\r\n  image, \r\n  name, \r\n  userrating, \r\n  discountPrice, \r\n  originalPrice, \r\n  discountLabel, \r\n  time,\r\n  save,\r\n  coupenCode,\r\n  deliveryTime,\r\n  freeDelivery,\r\n  bestSeller,\r\n  wishlistStatus,\r\n  sku_id,\r\n  onAddToCart,\r\n  onProductClick,\r\n  onIncrement,\r\n  onDecrement,\r\n  cartQuantity,\r\n  offer,\r\n  onProductImageClick,\r\n  handleWishlistToggle,\r\n}) => {\r\n  const [whistListBox, setWhistListBox] = useState({\r\n    whistlist: \"/images/product/whistlist.svg\",\r\n    whistlistFill: \"/images/product/whistlist-fill.svg\",\r\n  });\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  // const handleIncrement = () => setQuantity((prevQuantity) => prevQuantity + 1);\r\n  // const handleDecrement = () => setQuantity((prevQuantity) => Math.max(prevQuantity - 1, 0));\r\n\r\n  return (\r\n    <div className='productBoxes' key={id}>\r\n      <div className=\"whislistBox\">\r\n        <div className=\"wishlist-btn\" onClick={handleWishlistToggle}>\r\n          {wishlistStatus?.toLowerCase() === 'yes' ? (\r\n            <img\r\n              src={whistListBox.whistlistFill}\r\n              alt=\"Whistlist Product\"\r\n            />\r\n          ) : (\r\n            <img src={whistListBox.whistlist} alt=\"Whistlist Product\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {image && <img src={image} alt={name} onClick={onProductImageClick}  />}\r\n      {/* {image && <img src={image} alt={name} onClick={onProductClick}  />} */}\r\n      {name && <h4>{name.length > 50 ? `${name.slice(0, 50)}...` : name}</h4>}\r\n      <div className='priceList'>\r\n        {discountPrice && <p className='discount'>£ {discountPrice}</p>}\r\n        {originalPrice && <p className='original'>£ {originalPrice}</p>}\r\n      </div>\r\n      <div className='ratingAndCartWrap'>\r\n        {userrating && <StarRating userrating={userrating} />}\r\n        {offer ? null : (\r\n            cartQuantity === 0 ? (\r\n            // Show Add Button if quantity is 0\r\n            <button type=\"button\" onClick={() => onAddToCart(sku_id)} \r\n              // disabled={user.length === 0 ? true : false} \r\n              title={user.length === 0 ? 'Please login to add items to cart.' : 'Add to cart'}\r\n              >Add</button>\r\n          ) : (\r\n            <button type=\"button\" onClick={() => onProductClick()} \r\n              // disabled={user.length === 0 ? true : false} \r\n              title={user.length === 0 ? 'Please login to add items to cart.' : 'Add to cart'}\r\n              >Add</button>\r\n            // Show Plus/Minus Buttons if quantity is greater than 0\r\n            // <div className=\"quantityButtons\">\r\n            //   <button type=\"button\"  onClick={() => onIncrement(sku_id)}>+</button>\r\n            //   <span>{cartQuantity}</span>\r\n            //   <button type=\"button\" onClick={() => onDecrement(sku_id)}>-</button>\r\n            // </div>\r\n          )\r\n        )}\r\n      </div>\r\n      \r\n      {(discountLabel || time || save || coupenCode) && (\r\n        <div className={`offerList ${save ? 'saveMode' : ''}`}>\r\n          {discountLabel && <span>{discountLabel}</span>}\r\n          {time && <h6>{time}</h6>}\r\n          {coupenCode && <p>{coupenCode}</p>}\r\n        </div>\r\n      )}\r\n\r\n      {deliveryTime && <p>{deliveryTime}</p>}\r\n      {freeDelivery && <p>{freeDelivery}</p>}\r\n      {bestSeller && <div className=\"ribbon\">#Best Seller</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListCard;\r\n","import React, { useState } from 'react';\r\nimport './StarRating.css';\r\n\r\nconst StarRating = ({ userrating = 0, onRatingChange }) => {\r\n    const [rating, setRating] = useState(userrating ? userrating : 0);\r\n    // const [hover, setHover] = useState(null);\r\n    // const [totalStars, setTotalStars] = useState(5);\r\n    const [totalStars] = useState(5);\r\n    const handleRatingSelect = (currentRating) => {\r\n        setRating(currentRating); // Update local rating state\r\n        if (onRatingChange) {\r\n            onRatingChange(currentRating); // Notify parent of the change\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"starRating\">\r\n            {[...Array(totalStars)].map((star, index) => {\r\n                const currentRating = index + 1;\r\n                return (\r\n                    <label key={index}>\r\n                        <input\r\n                            key={star}\r\n                            type=\"radio\"\r\n                            name=\"rating\"\r\n                            value={currentRating}\r\n                            onChange={() => handleRatingSelect(currentRating)}\r\n                            userrating = {rating}\r\n                        />\r\n                        <span\r\n                            className=\"star\"\r\n                            style={{\r\n                                color:\r\n                                    // currentRating <= (hover || rating) ? \"#ffc107\" : \"#e4e5e9\",\r\n                                    currentRating <= rating ? \"#ffc107\" : \"#e4e5e9\",\r\n                            }}\r\n                        // onMouseEnter={() => setHover(currentRating)}\r\n                        // onMouseLeave={() => setHover(null)}\r\n                        >\r\n                            &#9733;\r\n                        </span>\r\n                    </label>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StarRating","import React, { useEffect, useState } from \"react\";\r\nimport ProductCard from \"../../components/ProductCard/ProductCard\";\r\nimport ProductListCard from \"../../components/ProductListCard/ProductListCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleCategoryModal, toggleModal } from \"../../store/slice/modalSlice\";\r\nimport \"./Category.css\";\r\nimport { addProductOnWhistList, addToCartData, deleteSingleWhistListData, getAllCategoryData, getAllListProductAPI, getAllRecentViewData, getSubCategoryData, productDetailData, viewItemsInCartData } from \"../../store/slice/api_integration\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { DEFAULT_OPTIONS } from \"../../utils/Constants\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport { setViewCartItems } from \"../../store/slice/cartSlice\";\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst Category = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [page, setPage] = useState(0);  // Default page 0 (first page)\r\n  const [itemsPerPage,setItemsPerPage] = useState(30);\r\n  const [loading, setLoading] = useState(false);\r\n  const [triggerSkuId, setTriggerSkuId] = useState(null);\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  const { allCategoryList, subCategoryList, recentView, totalRecentView = 0 } = useSelector(\r\n    (state) => state.product\r\n  );\r\n  \r\n  const handleCategory = (item) => {\r\n    const responseObj = { category_id: item.id };\r\n    dispatch(getSubCategoryData(responseObj))\r\n    const subCategoryObj = { \r\n      isOpen: isOpen, \r\n      category: subCategoryList, \r\n      category_name: item.name,\r\n      category_id: item.id,\r\n    };\r\n    dispatch(toggleCategoryModal(subCategoryObj));\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    dispatch(getAllCategoryData()).finally(() => {\r\n      setLoading(false)\r\n    })\r\n    // dispatch(getAllRecentViewData(0, itemsPerPage));\r\n  }, [dispatch]);\r\n\r\n\r\n  useEffect(() => {\r\n    // Read query and page number from the URL search params\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const pageParam = parseInt(searchParams.get('page'), 10) || 1; // Default to page 1 if not provided\r\n    const itemsPerPageParam = parseInt(searchParams.get(\"itemsPerPage\"), 10) || itemsPerPage;\r\n\r\n    // Update local page state to match the page in the URL\r\n    setPage(pageParam - 1); // `react-paginate` uses 0-based indexing\r\n    setItemsPerPage(itemsPerPageParam);\r\n\r\n    // If there is a query, fetch data from API\r\n        const offset = ((pageParam - 1) * itemsPerPage) + 1; // Calculate the correct offset\r\n        const limit = itemsPerPageParam;\r\n        const responseObj = {\r\n            offset,\r\n            limit,\r\n        }\r\n        dispatch(getAllRecentViewData(responseObj)); // Dispatch API call\r\n}, [location.search, itemsPerPage, dispatch]);  // Trigger this effect when the URL's query or page changes\r\n\r\n// Handle page change event (when user clicks next/previous)\r\nconst handlePageChange = (data) => {\r\n  const { selected } = data;\r\n  const searchParams = new URLSearchParams(location.search);\r\n  searchParams.set(\"page\", selected + 1); // Convert to 1-based indexing\r\n  navigate(`?${searchParams.toString()}`);\r\n  };\r\n\r\n  // Handle dropdown change for itemsPerPage\r\n  const handleItemsPerPageChange = (e) => {\r\n    const newItemsPerPage = parseInt(e.target.value, 10);\r\n    setItemsPerPage(newItemsPerPage);\r\n    setPage(0); // Reset to the first page\r\n    const searchParams = new URLSearchParams(location.search);\r\n    searchParams.set(\"page\", 1);\r\n    searchParams.set(\"itemsPerPage\", newItemsPerPage);\r\n    navigate(`?${searchParams.toString()}`);\r\n  };\r\n\r\n  // Calculate total pages based on total results\r\n  const itemsPerPageOptions = DEFAULT_OPTIONS.filter(option => option <= totalRecentView);\r\n  \r\n  const handleProductClick = (item) => {\r\n    if(user.length === 0) {\r\n      dispatch(toggleModal(true));\r\n    } else {\r\n      const responseObj = { \r\n        product_id: item.product_id,\r\n      }\r\n      dispatch(productDetailData(responseObj))\r\n      navigate(`/product/${item.product_id}`, { state: { product: item } });\r\n    }\r\n  };\r\n\r\n  const handleProcuctImageClick = (item) => {\r\n    const responseObj = { \r\n      product_id: item.product_id,\r\n    }\r\n    dispatch(productDetailData(responseObj))\r\n    navigate(`/product/${item.product_id}`, { state: { product: item } });\r\n  }\r\n\r\n  const handleAddToCartClick = (sku_id) => {\r\n      setTriggerSkuId(sku_id);\r\n      const responseObj = {\r\n        sku_id,\r\n        type: \"increase\",\r\n      };\r\n      dispatch(addToCartData(responseObj)).finally(() => {\r\n        fetchUpdatedProductList();\r\n      })\r\n  };\r\n  const handleIncrement = (sku_id) => {\r\n    const responseObj = { sku_id, type: \"increase\" };\r\n    dispatch(addToCartData(responseObj)).finally(() => {\r\n      fetchUpdatedProductList();\r\n    });\r\n  };\r\n\r\n  const handleDecrement = (sku_id) => {\r\n    const responseObj = { sku_id, type: \"decrease\" };\r\n    dispatch(addToCartData(responseObj)).finally(() => {\r\n      fetchUpdatedProductList();\r\n    });\r\n  };\r\n\r\n  const fetchUpdatedProductList = () => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const pageParam = parseInt(searchParams.get('page'), 10) || 1; // Default to page 1 if not provided\r\n    const itemsPerPageParam = parseInt(searchParams.get(\"itemsPerPage\"), 10) || itemsPerPage;\r\n\r\n    // Update local page state to match the page in the URL\r\n    setPage(pageParam - 1); // `react-paginate` uses 0-based indexing\r\n    setItemsPerPage(itemsPerPageParam);\r\n\r\n    // If there is a query, fetch data from API\r\n        const offset = ((pageParam - 1) * itemsPerPage) + 1; // Calculate the correct offset\r\n        const limit = itemsPerPageParam;\r\n        const responseObj = {\r\n            offset,\r\n            limit,\r\n        }\r\n        dispatch(getAllRecentViewData(responseObj));\r\n    dispatch(viewItemsInCartData());\r\n    dispatch(setViewCartItems(null));\r\n  };\r\n  \r\n  const handleWishlistToggle = (productData) => {\r\n    if(user.length === 0) {\r\n      dispatch(toggleModal(true));\r\n      // setWishlistLoading(false);\r\n      return;\r\n    }\r\n\r\n    const responseObj = { sku_id: Number(productData?.sku_id) }\r\n    if(productData?.wishlistStatus?.toLowerCase() === 'no') {\r\n      dispatch(addProductOnWhistList(responseObj)).finally(() => {\r\n        fetchUpdatedProductList();\r\n        // setWishlistLoading(false);\r\n      })\r\n    } else {\r\n        dispatch(deleteSingleWhistListData(responseObj)).finally(() => {\r\n          fetchUpdatedProductList();\r\n          // setWishlistLoading(false);\r\n        })\r\n    }\r\n  }\r\n  \r\n  const schemaMarkup = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"Article\",\r\n    \"mainEntityOfPage\": {\r\n      \"@type\": \"WebPage\",\r\n      \"@id\": \"https://fikfis.co.uk/allcategory\"\r\n    },\r\n    \"headline\": \"Welcome to FikFis, your ultimate destination for top-quality products.\",\r\n    \"description\": \"FikFis brings you a hassle-free online shopping experience with a wide range of quality products at unbeatable prices.\",\r\n    \"image\": \"https://fikfis.co.uk/images/icons/LOGO1.png\",  \r\n    \"author\": {\r\n      \"@type\": \"Organization\",\r\n      \"name\": \"FikFis\"\r\n    },  \r\n    \"publisher\": {\r\n      \"@type\": \"Organization\",\r\n      \"name\": \"\",\r\n      \"logo\": {\r\n        \"@type\": \"ImageObject\",\r\n        \"url\": \"\"\r\n      }\r\n    },\r\n    \"datePublished\": \"2025-03-06\"\r\n  }\r\n  \r\n  const currentUrl = window.location.href;\r\n  const baseUrl = window.origin;\r\n  return (\r\n    <>\r\n      <Helmet>\r\n          <title>{'Welcome to FikFis, your ultimate destination for top-quality products.'}</title>\r\n          <meta name=\"description\" content={'FikFis brings you a hassle-free online shopping experience with a wide range of quality products at unbeatable prices.'} />\r\n          <meta name=\"keywords\" content={'FikFis | Category'} />\r\n          {/* <!-- Open Graph / Facebook --> */}\r\n          <meta property=\"og:title\" content={'Welcome to FikFis, your ultimate destination for top-quality products.'} />\r\n          <meta property=\"og:description\" content={'FikFis brings you a hassle-free online shopping experience with a wide range of quality products at unbeatable prices.'} />\r\n          <meta property=\"og:image\" content={allCategoryList[0]?.[0]?.category_image || `${baseUrl}/images/icons/LOGO1.png`} />\r\n          <meta property=\"og:url\" content={currentUrl} />\r\n          <meta property=\"og:type\" content=\"article\" />\r\n          {/* <!-- Twitter --> */}\r\n          <meta property=\"twitter:card\" content=\"article\" />\r\n          <meta property=\"twitter:url\" content={currentUrl} />\r\n          <meta property=\"twitter:title\" content=\"Welcome to FikFis, your ultimate destination for top-quality products.\" />\r\n          <meta property=\"twitter:description\" content=\"FikFis brings you a hassle-free online shopping experience with a wide range of quality products at unbeatable prices.\" />\r\n          <meta property=\"twitter:image\" content={allCategoryList[0]?.[0]?.category_image || `${baseUrl}/images/icons/LOGO1.png`} />\r\n          <script type=\"application/ld+json\">\r\n            {JSON.stringify(schemaMarkup)}\r\n          </script>\r\n      </Helmet>\r\n      {loading ? (\r\n        <div className=\"loadingContainer\">\r\n            <CircularProgress />\r\n        </div>\r\n        ) : (\r\n        <div className=\"allCategory\">\r\n          {allCategoryList[0] && allCategoryList[0].length > 0 && (\r\n            <>\r\n              <h3>Main Category</h3>\r\n              <div className=\"categoryList\">\r\n                {allCategoryList[0].map((slide, index) => (\r\n                  <div key={index}>\r\n                    <ProductCard\r\n                      id = {slide?.id}\r\n                      imgSrc={slide?.category_image || '/images/no-product-available.png'}\r\n                      imgName={slide?.name}\r\n                      handleCategory={() => handleCategory(slide)}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className=\"productHistory\">\r\n            <div className=\"productHeader\">\r\n              {recentView && recentView.length > 0 && <h3>Frequently bought</h3>}\r\n            </div>\r\n            <div className=\"productList\">\r\n              {recentView && recentView.length > 0 && (\r\n                recentView.map((item, index) => (\r\n                  <div key={index}>\r\n                    <ProductListCard\r\n                      id={item.id}\r\n                      image={item.imageUrl ? item.imageUrl : \"/images/no-product-available.png\"}\r\n                      name={item.name || \"\"}\r\n                      userrating={item.rating || \"0.0\"}\r\n                      discountPrice={item.discountedPrice || \"\"}\r\n                      originalPrice={item.price || \"\"}\r\n                      save={item.offer || \"\"}\r\n                      coupenCode={item.coupen || \"\"}\r\n                      deliveryTime={item.deliverytime || \"\"}\r\n                      freeDelivery={item.freedelivery || \"\"}\r\n                      bestSeller={item.bestseller || \"\"}\r\n                      time={item.time || \"\"}\r\n                      discountLabel={item.discountlabel || \"\"}\r\n                      wishlistStatus={item.wishlistStatus || 'no'}\r\n                      sku_id={item.sku_id} // Pass SKU ID for Add to Cart\r\n                      // onAddToCart={() => handleAddToCartClick(item.sku_id)}\r\n                      onAddToCart={() => handleProductClick(item)}\r\n                      cartQuantity={Number(item.cartQuantity)}\r\n                      onIncrement={handleIncrement}\r\n                      onDecrement={handleDecrement}\r\n                      onProductClick={() => handleProductClick(item)}\r\n                      onProductImageClick={() => handleProcuctImageClick(item)}\r\n                      handleWishlistToggle={() => handleWishlistToggle(item)}\r\n                    />\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n              {recentView?.length > 0 && <div className='paginationBox'>\r\n                  {/* <div className=\"itemsPerPageDropdown\">\r\n                      <label>Items per page: </label>\r\n                      <select value={itemsPerPage} onChange={handleItemsPerPageChange}>\r\n                          {itemsPerPageOptions.map(option => (\r\n                              <option key={option} value={option}>\r\n                                  {option}\r\n                              </option>\r\n                          ))}\r\n                      </select>\r\n                  </div> */}\r\n                  {/* Pagination component */}\r\n                  <ReactPaginate\r\n                      previousLabel={\"Previous\"}\r\n                      nextLabel={\"Next\"}\r\n                      breakLabel={\"...\"}\r\n                      breakClassName={\"break-me\"}\r\n                      pageCount={Math.max(Math.ceil(totalRecentView / itemsPerPage), 1)}\r\n                      marginPagesDisplayed={2}\r\n                      pageRangeDisplayed={3}\r\n                      onPageChange={(ev) => handlePageChange(ev)}\r\n                      containerClassName={\"pagination\"}\r\n                      activeClassName={\"active\"}\r\n                      forcePage={page}  // Sync current page with URL\r\n                      disabled={totalRecentView === 0} \r\n                  />\r\n                </div>\r\n              }\r\n          </div>\r\n          <div className=\"productHistory\">\r\n            <div className=\"productHeader\">\r\n              {recentView && recentView.length > 0 && <h3>Inspired by your browsing history</h3>}\r\n              \r\n            </div>\r\n            <div className=\"productList\">\r\n              {recentView && recentView.length > 0 && (\r\n                recentView.map((item, index) => (\r\n                  <div key={index}>\r\n                    <ProductListCard\r\n                      id={item.id}\r\n                      image={item.imageUrl ? item.imageUrl : \"/images/no-product-available.png\"}\r\n                      name={item.name || \"\"}\r\n                      userrating={item.rating || \"0.0\"}\r\n                      discountPrice={item.discountedPrice || \"\"}\r\n                      originalPrice={item.price || \"\"}\r\n                      save={item.offer || \"\"}\r\n                      coupenCode={item.coupen || \"\"}\r\n                      deliveryTime={item.deliverytime || \"\"}\r\n                      freeDelivery={item.freedelivery || \"\"}\r\n                      bestSeller={item.bestseller || \"\"}\r\n                      time={item.time || \"\"}\r\n                      discountLabel={item.discountlabel || \"\"}\r\n                      wishlistStatus={item.wishlistStatus || 'no'}\r\n                      sku_id={item.sku_id} // Pass SKU ID for Add to Cart\r\n                      // onAddToCart={() => handleAddToCartClick(item.sku_id)}\r\n                      onAddToCart={() => handleProductClick(item)}\r\n                      cartQuantity={Number(item.cartQuantity)}\r\n                      onIncrement={handleIncrement}\r\n                      onDecrement={handleDecrement}\r\n                      onProductClick={() => handleProductClick(item)}\r\n                      onProductImageClick={() => handleProcuctImageClick(item)}\r\n                      handleWishlistToggle={() => handleWishlistToggle(item)}\r\n                    />\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n              {recentView?.length > 0 && <div className='paginationBox'>\r\n                  {/* <div className=\"itemsPerPageDropdown\">\r\n                      <label>Items per page: </label>\r\n                      <select value={itemsPerPage} onChange={handleItemsPerPageChange}>\r\n                          {itemsPerPageOptions.map(option => (\r\n                              <option key={option} value={option}>\r\n                                  {option}\r\n                              </option>\r\n                          ))}\r\n                      </select>\r\n                  </div> */}\r\n                  {/* Pagination component */}\r\n                  <ReactPaginate\r\n                      previousLabel={\"Previous\"}\r\n                      nextLabel={\"Next\"}\r\n                      breakLabel={\"...\"}\r\n                      breakClassName={\"break-me\"}\r\n                      pageCount={Math.max(Math.ceil(totalRecentView / itemsPerPage), 1)}\r\n                      marginPagesDisplayed={2}\r\n                      pageRangeDisplayed={3}\r\n                      onPageChange={(ev) => handleItemsPerPageChange(ev)}\r\n                      containerClassName={\"pagination\"}\r\n                      activeClassName={\"active\"}\r\n                      forcePage={page}  // Sync current page with URL\r\n                      disabled={totalRecentView === 0} \r\n                  />\r\n                </div>\r\n              }\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"names":["_ref","id","image","name","userrating","discountPrice","originalPrice","discountLabel","time","save","coupenCode","deliveryTime","freeDelivery","bestSeller","wishlistStatus","sku_id","onAddToCart","onProductClick","onIncrement","onDecrement","cartQuantity","offer","onProductImageClick","handleWishlistToggle","whistListBox","setWhistListBox","useState","whistlist","whistlistFill","user","useSelector","state","_jsxs","className","children","_jsx","onClick","toLowerCase","src","alt","length","slice","StarRating","type","title","onRatingChange","rating","setRating","totalStars","Array","map","star","index","currentRating","value","onChange","handleRatingSelect","style","color","Category","_allCategoryList$","_allCategoryList$$","_allCategoryList$2","_allCategoryList$2$","dispatch","useDispatch","location","useLocation","navigate","useNavigate","isOpen","setIsOpen","page","setPage","itemsPerPage","setItemsPerPage","loading","setLoading","triggerSkuId","setTriggerSkuId","allCategoryList","subCategoryList","recentView","totalRecentView","product","useEffect","getAllCategoryData","finally","searchParams","URLSearchParams","search","pageParam","parseInt","get","itemsPerPageParam","responseObj","offset","limit","getAllRecentViewData","DEFAULT_OPTIONS","filter","option","handleProductClick","item","toggleModal","product_id","productDetailData","handleProcuctImageClick","handleIncrement","addToCartData","fetchUpdatedProductList","handleDecrement","viewItemsInCartData","setViewCartItems","productData","_productData$wishlist","Number","addProductOnWhistList","deleteSingleWhistListData","currentUrl","window","href","baseUrl","origin","_Fragment","Helmet","content","property","category_image","JSON","stringify","CircularProgress","slide","ProductCard","imgSrc","imgName","handleCategory","category_id","getSubCategoryData","subCategoryObj","category","category_name","toggleCategoryModal","ProductListCard","imageUrl","discountedPrice","price","coupen","deliverytime","freedelivery","bestseller","discountlabel","ReactPaginate","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","Math","max","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","ev","data","selected","set","toString","handlePageChange","containerClassName","activeClassName","forcePage","disabled","e","newItemsPerPage","target","handleItemsPerPageChange"],"sourceRoot":""}